"""
The goal of this project is to develop a lossy image compression
format close to JPEG. Lossy compression algorithms allow to
greatly reduce the size of image files at the price of loosing some data from the original image. In general, a lossy image compression works by pruning the information the human eye is not sensible to. This is the case, for instance, in the JPEG file format.
"""
import math


#The following class operates to check the validity of User inputs
class InvalidInput(Exception):
	def __init__(self, data, correct):
		super().__init__()
		self.data = data
		self.correct = correct
	def __str__(self):
		return f'The input {self.data} is invalid. The input should be of the following form: {self.correct}'

#Start of PROJECT
def ppm_tokenize(stream):
	"""
	:param stream: input stream such as g=open('file')
	:return: iterator (generator) that outputs the data individually as tokens
	"""
	#We go through each line in the file
	for line in stream:
		#Remove the comments from the file in this manner (assume comments are made after typing the content on each line
		line = line.partition('#')[0]

		#Remove any space at the end of the string and split the elements of the line to obtain a list
		line = line.rstrip().split()

		#Check that the line is non-empty and iterate
		if line:
			for t in line:
				yield t



def ppm_load(stream):
	"""
	:param stream: input stream such as g=open('file')
	:return: width, height and 2D-array for image
	"""
	g=ppm_tokenize(stream)
	img=[]
	#iterate through the first 4 elements of the stream to find width and height
	for i in range(4):
		curr=next(g)
		if i==1:
			w = curr
		if i==2:
			h = curr

	#go through remaining elements in ppm_tokenize and add different colors as lists of [r,g,b] form
	for i in range(int(h)):
		temprow=[]
		for j in range(int(w)):
			curr2=[next(g) for _ in range(3)]
			temprow.append(' '.join(curr2))
		img.append(temprow)
	return int(w),int(h),img

def ppm_save(w: int, h: int, img: list, output) -> None:
	"""takes an output stream output and
	that saves the PPM image img whose size is w x h."""
	#Write the data to produce a file of PPM format
	output.write('P3\n')
	output.write(f'{w} {h}\n')
	output.write('255\n')
	for row in img:
		for pix in row:
			output.write(f'{pix}\n')



def RGB2YCbCr(r: int, g: int, b: int) -> tuple:
	"""
	:int r: red, 0 to 255
	:int g: green 0 to 255
	:int b: blue 0 to 255
	:return: Y, Cb, Cr color format
	"""
	#Use the formulas relating YCbCr and RGB
	Y = 0.299 * r + 0.587 * g + 0.114 * b
	Cb = 128 - 0.168736 * r - 0.331264 * g + 0.5 * b
	Cr = 128 + 0.5 * r - 0.418688 * g - 0.081312 * b
	return (round(Y), round(Cb), round(Cr))



def YCbCr2RGB(Y: int, Cb: int, Cr: int) -> tuple:
	"""
	:int r: red, 0 to 255
	:int g: green 0 to 255
	:int b: blue 0 to 255
	:return: r,g,b color format as integers rounded
	"""
	r = Y + 1.402 * (Cr - 128)
	g = Y - 0.34414 * (Cb - 128) - 0.71414 * (Cr - 128)
	b = Y + 1.772 * (Cb - 128)
	rgb=[r,g,b]
	##Make sure output lies between 0 and 255
	for i in range(len(rgb)):
		if rgb[i]<0:
			rgb[i]=0
		elif rgb[i]>255:
			rgb[i]=255
	return (round(rgb[0]), round(rgb[1]), round(rgb[2]))



def img_RGB2YCbCr(img: list) -> list:
	"""
	:param img: 2D array with pixels stored as rgb values ('255 255 255')
	:return: Y[i][j], Cb[i][j], Cr[i][j] --> 3 matrices with these attributes
	and i,j denoting the position of the pixel
	"""
	h=len(img)
	w=len(img[0])
	#initialise matrices for Y, Cb, Cr
	Y=[]
	Cb=[]
	Cr=[]
	#Iterate through img and fill Y, Cb, Cr matrices using converter function above
	for i, row in enumerate(img):
		Y_row=[]
		Cb_row = []
		Cr_row = []
		for j, pixel in enumerate(row):
			(R,G,B)=tuple(pixel.split())
			Y_pixel, Cb_pixel, Cr_pixel = RGB2YCbCr(float(R),float(G),float(B))
			Y_row.append(Y_pixel)
			Cb_row.append(Cb_pixel)
			Cr_row.append(Cr_pixel)
		Y.append(Y_row)
		Cb.append(Cb_row)
		Cr.append(Cr_row)
	return (Y, Cb, Cr)

def img_YCbCr2RGB(Y: int, Cb: int, Cr: int) -> list:
	"""

	:param Y: 2D array of values of Y for each pixel in image
	:param Cb: 2D array of values of Cb for each pixel in image
	:param Cr: 2D array of values of Cr for each pixel in image
	:return: converts img back to pixels with RGB formatting from YCbCr
	"""
	#Use Y, Cb, Cr matrices to convert back to rgb pixels and fill a singl img matrix
	img=[]
	for i in range(len(Y)):
		row=[]
		for j in range(len(Y[0])):
			r,g,b=YCbCr2RGB(Y[i][j], Cb[i][j], Cr[i][j])
			row.append(str(r)+' '+str(g)+' '+str(b))
		img.append(row)
	return img

def subsampling(w : int, h: int, C: list, a: int, b: int) -> list:
	"""
	:param w: width of image
	:param h: height of image
	:param C: 2D array of certain attribute (e.g. RGB or Y attributes)
	:param b: sub samplng mode dividing the image's width (block height)
	:param a:sub sampling mode dividing the image's height (block width)
	:return: an img where the data has been compressed by considering
	axb blocks as pixels and averaging out the values in these blocks
	"""
	#Check if input C is matrix
	for row in C:
		if len(C[0])!=len(row):
			raise InvalidInput(C, "A matrix of integers (A 2D array where the rows are of equal length).")
	#Check if dimensions match input array
	if h!=len(C) or w!=len(C[0]):
		raise InvalidInput(f'{(w,h)} are not the dimensions of the input matrix, it is', f'please input the correct dimensions of the matrix img, {len(C)}x{len(C[0])}')
	#inputs a and b cannot be bigger than the dimensions of the matrix
	if a>w or b>h:
		raise InvalidInput((a,b),"integers a and b s.t. a<=w and b<=h")


	img = []
	#split matrix by height by stepping by a through the rows of the matrix
	for i in range(0, h, a):
		row = []
		C_cut=C[i:i+a]
		#split matrix by width by stepping by b through the columns of the cut-by-height matrix
		for j in range(0, w, b):
			temp_sum=0
			for c in C_cut:
				temp_sum+=sum(c[j:j+b])
				temp_len=len(c[j:j+b])
			row.append(round(temp_sum/(temp_len*len(C_cut))))
		img.append(row)
	return img

#subsampling_sample_inp= [[12, 140, 125, 114, 71, 52, 44, 216, 16, 15, 47, 111, 119, 13, 101], [214, 112, 229, 142, 3, 81, 216, 174, 142, 79, 110, 172, 52, 47, 194], [49, 183, 176, 135, 22, 235, 63, 193, 40, 150, 185, 98, 35, 23, 116], [148, 40, 119, 51, 194, 142, 232, 186, 83, 189, 181, 107, 136, 36, 87], [125, 83, 236, 194, 138, 112, 166, 28, 117, 16, 161, 205, 137, 33, 108], [161, 108, 255, 202, 234, 73, 135, 71, 126, 134, 219, 204, 185, 112, 70], [252, 46, 24, 56, 78, 81, 216, 32, 197, 195, 239, 128, 5, 58, 136], [174, 57, 150, 222, 80, 232, 1, 134, 91, 54, 152, 101, 78, 191, 82], [0, 165, 250, 9, 57, 185, 157, 122, 29, 123, 40, 43, 248, 35, 64], [65, 243, 84, 135, 216, 108, 102, 159, 204, 191, 224, 231, 61, 126, 115], [32, 173, 10, 117, 112, 3, 36, 30, 117, 34, 16, 169, 36, 121, 142], [248, 109, 67, 242, 124, 242, 208, 97, 48, 49, 220, 181, 216, 210, 239], [27, 50, 31, 206, 173, 55, 127, 98, 97, 229, 71, 216, 93, 142, 236], [127, 38, 226, 50, 25, 7, 47, 121, 85, 208, 248, 246, 109, 205, 30], [84, 194, 1, 199, 135, 232, 146, 216, 249, 79, 97, 151, 111, 29, 31], [160, 29, 25, 244, 80, 29, 41, 95, 35, 34, 120, 206, 61, 126, 20], [41, 214, 161, 133, 104, 160, 122, 135, 202, 67, 153, 234, 161, 37, 4], [234, 51, 37, 109, 135, 67, 178, 35, 125, 189, 145, 80, 224, 154, 4], [153, 53, 68, 135, 59, 54, 79, 139, 144, 107, 175, 104, 135, 250, 128], [26, 47, 216, 141, 22, 1, 170, 66, 134, 82, 226, 218, 4, 57, 38], [76, 18, 189, 75, 220, 65, 21, 157, 186, 20, 183, 107, 127, 52, 181], [208, 79, 121, 83, 90, 211, 12, 91, 170, 210, 127, 136, 81, 55, 195], [19, 240, 113, 102, 235, 179, 156, 116, 114, 12, 98, 204, 168, 142, 35], [142, 179, 204, 169, 14, 59, 133, 91, 135, 19, 55, 222, 176, 160, 223], [59, 197, 97, 130, 22, 223, 0, 100, 186, 220, 35, 169, 160, 63, 153], [158, 209, 167, 206, 151, 65, 98, 215, 194, 89, 154, 207, 0, 155, 146], [107, 220, 164, 238, 226, 226, 109, 242, 86, 43, 145, 171, 47, 120, 158], [115, 101, 75, 12, 23, 125, 243, 37, 233, 212, 99, 196, 253, 204, 124], [75, 2, 54, 217, 112, 90, 237, 25, 127, 62, 233, 68, 237, 162, 226], [218, 228, 81, 243, 230, 132, 126, 141, 248, 122, 140, 225, 39, 146, 120], [139, 171, 163, 41, 70, 77, 118, 196, 78, 109, 32, 212, 208, 169, 238], [212, 31, 105, 215, 199, 10, 194, 244, 3, 180, 152, 199, 214, 112, 249], [112, 139, 223, 248, 14, 199, 172, 207, 84, 239, 65, 13, 201, 13, 42], [219, 69, 236, 93, 25, 133, 194, 167, 108, 232, 167, 172, 194, 142, 215], [129, 41, 240, 9, 26, 179, 114, 35, 20, 15, 126, 102, 10, 78, 122], [64, 242, 58, 111, 238, 131, 188, 85, 58, 83, 159, 55, 13, 159, 192], [203, 101, 38, 124, 52, 154, 61, 21, 177, 219, 189, 35, 174, 6, 215], [250, 54, 221, 185, 235, 78, 222, 90, 138, 247, 238, 223, 137, 165, 125], [44, 142, 230, 124, 237, 194, 172, 14, 253, 166, 93, 249, 108, 181, 132], [174, 143, 141, 5, 97, 43, 123, 208, 250, 123, 243, 251, 229, 8, 47], [150, 113, 207, 124, 156, 188, 242, 176, 217, 169, 180, 232, 138, 156, 128], [118, 61, 98, 161, 61, 94, 98, 110, 247, 141, 144, 51, 99, 151, 116], [184, 91, 154, 7, 64, 140, 23, 27, 149, 64, 251, 52, 6, 145, 240], [245, 225, 174, 94, 26, 129, 244, 58, 33, 205, 251, 37, 27, 77, 76], [155, 43, 127, 60, 213, 115, 194, 230, 226, 152, 219, 156, 30, 50, 106], [108, 135, 41, 80, 122, 88, 38, 80, 1, 209, 230, 240, 149, 16, 118], [147, 144, 232, 36, 119, 135, 101, 217, 58, 115, 76, 136, 72, 36, 30], [84, 157, 147, 224, 63, 239, 155, 206, 139, 252, 224, 41, 20, 221, 165], [128, 13, 46, 117, 10, 137, 20, 89, 240, 226, 142, 92, 223, 251, 46], [240, 178, 209, 170, 164, 53, 82, 168, 210, 253, 147, 205, 18, 232, 45], [161, 129, 165, 59, 206, 0, 236, 211, 27, 96, 185, 255, 226, 26, 104], [136, 67, 147, 224, 248, 62, 14, 122, 81, 159, 7, 208, 47, 115, 58], [236, 60, 78, 255, 149, 139, 212, 247, 241, 124, 233, 74, 196, 97, 69], [35, 141, 212, 174, 136, 1, 144, 152, 250, 76, 228, 247, 176, 170, 193], [233, 164, 96, 122, 196, 119, 210, 22, 162, 242, 195, 197, 77, 253, 18], [64, 169, 51, 225, 51, 233, 7, 73, 209, 79, 38, 240, 135, 173, 203], [41, 168, 194, 162, 249, 18, 35, 120, 147, 116, 46, 222, 50, 51, 227], [85, 153, 14, 23, 166, 28, 150, 183,191, 220, 74, 125, 210, 92, 87], [89, 40, 195, 123, 254, 73, 118, 236, 130, 235, 130, 4, 238, 147, 80], [37, 226, 176, 153, 217, 128, 233, 154, 101, 196, 247, 54, 121, 195, 183], [151, 151, 11, 202, 140, 4, 25, 254, 146, 117, 180, 112, 97, 128, 70], [49, 20, 158, 225, 17, 186, 67, 46, 151, 167, 212, 89, 102, 67, 187], [139, 84, 131, 246, 151, 173, 58, 239, 38, 72, 115, 203, 187, 46, 202], [7, 135, 63, 232, 188, 134, 195, 190, 55, 119, 241, 12, 167, 113, 32], [237, 154, 209, 59, 71, 23, 19, 155, 252, 59, 49, 120, 69, 198, 232], [189, 214, 79, 212, 50, 250, 208, 143, 16, 189, 111, 227, 227, 120, 185], [50, 188, 183, 31, 203, 141, 97, 62, 232, 46, 108, 10, 25, 170, 124], [64, 105, 35, 106, 110, 119, 168, 75, 1, 141, 74, 66, 128, 89, 56], [13, 67, 7, 183, 121, 165, 8, 89, 135, 26, 64, 215, 58, 32, 243], [229, 185, 55, 231, 113, 22, 154, 234, 15, 31, 245, 205, 218, 55, 251], [227, 37, 41, 164, 75, 33, 64, 140, 166, 195, 150, 232, 220, 50, 58], [110, 220, 231, 116, 211, 173, 232, 204, 212, 48, 160, 218, 160, 130, 191], [78, 242, 34, 46, 43, 47, 221, 49, 190, 66, 30, 168, 62, 210, 181], [216, 26, 147, 159, 180, 53, 108, 79, 246, 114, 55, 179, 188, 58, 142], [115, 219, 13, 136, 14, 92, 139, 158, 173, 179, 3, 92, 73, 205, 35], [72, 15, 46, 110, 192, 214, 232, 174, 80, 189, 159, 166, 43, 26, 79], [80, 25, 41, 139, 226, 217, 248, 226, 212, 139, 110, 58, 176, 220, 56], [145, 249, 157, 23, 112, 202, 28, 3, 104, 154, 108, 70, 130, 148, 167], [61, 3, 254, 220, 89, 66, 194, 117, 181, 36, 203, 21, 223, 9, 235], [39, 160, 219, 207, 213, 148, 58, 207, 10, 166, 87, 235, 185, 45, 223], [54, 124, 223, 205, 40, 202, 158, 173, 113, 170, 86, 39, 58, 99, 178], [179, 75, 120, 52, 74, 131, 101, 88, 78, 38, 90, 252, 237, 229, 165]]
#print(subsampling(15,82,subsampling_sample_inp, 3,5))
def extrapolate(w: int, h: int, C: list, b: int, a: int) -> list:
	"""
	:param w: width BEFORE sub sampling has been applied
	:param h: height BEFORE sub sampling has been applied
	:param C: sub sampled matrix
	:param b:sub samplng mode dividing the image's width (block height)
	:param a:sub sampling mode dividing the image's height (block width)
	:return: A 2D-array to emulate the original image (as some data was lost during subsampling)
	"""

	##Testing whether input is correct

	##Check whether 2D array is a matrix
	for row in C:
		if len(C[0])!=len(row):
			raise InvalidInput(C, "A matrix of integers (A 2D array where the rows are of equal length).")

	img=[]
	for smallrow in C:
		temp_row=[]
		for pixel in smallrow:
			#Multiply pixels by a to extrapolate
			temp_row+=[pixel]*a
			temp_row=temp_row[:w]
		#Multiply the obtained row by b to obtain the a*b block that we desired
		img.extend([temp_row]*b)
	img=img[:h]
	return img
extrapolate_sample_inp=[[115, 114, 95], [153, 121, 132], [108, 123, 107], [132, 109, 154], [104, 133, 134], [117, 101, 115], [100, 95, 132], [133, 114, 138], [157, 140, 126], [119, 144, 165], [139, 141, 141], [120, 116, 127], [149, 147, 151], [121, 162, 145], [124, 133, 115], [123, 136, 118], [133, 137, 146], [153, 135, 141], [146, 119, 142], [130, 158, 132], [125, 116, 133], [140, 134, 140], [98, 100, 97], [150, 128, 170], [111, 128, 112], [109, 161, 114], [141, 133, 128], [100, 87, 195]]

print(extrapolate(15,82,extrapolate_sample_inp,3,5))
def block_splitting(w: int, h: int, C: list) -> list:
	"""

	:param w:
	:param h:
	:param C:
	:return:
	"""
	for i in range(0, h, 8):
		block = []
		if i + 8 > h:
			temp_col = C[i:i + 8]
			t = len(temp_col)
			temp_col.extend([temp_col[t - 1]] * (8 - t))
			C_cut=temp_col
		else:
			C_cut=C[i:i+8]
		for j in range(0, w, 8):
			for c in C_cut:
				if j + 8 > w:
					temp_row=c[j:j+8]
					t=len(temp_row)
					temp_row.extend([temp_row[t-1]]*(8-t))
					block.append(temp_row)
				else:
					block.append(c[j:j+8])
		for y in range(0,len(block),8):
			yield block[y:y+8]

monster_input= 			[[161, 77, 225, 34, 240, 226, 155, 140, 28, 180, 37, 158, 236, 231, 19, 29, 188, 146, 39, 46, 196, 236, 21, 230, 96, 164, 243, 77, 31, 230, 52, 175, 43, 88, 20, 126, 224, 224, 81, 186, 190, 144, 198, 209, 173, 26, 171, 33, 168, 48, 197, 145, 129, 76, 170, 41, 72, 179, 158, 200, 66, 43, 158, 192, 168, 65, 47, 216, 185, 9, 185, 158, 92, 109, 174, 248, 98, 115, 70, 79, 39, 151, 51, 19, 172, 67, 192, 78, 83, 92, 84, 224, 22, 210, 186, 121, 227, 145, 229, 119, 122, 158, 240, 99, 188, 225, 236, 144, 195, 214, 82, 102, 70, 128, 26, 246, 190, 52, 63, 145, 42, 82, 139, 230, 75],
						  [223, 46, 113, 230, 178, 13, 212, 27, 202, 191, 120, 197, 41, 191, 114, 14, 163, 50, 171, 74, 70, 19, 146, 241, 71, 240, 229, 2, 40, 9, 131, 110, 76, 216, 56, 147, 121, 154, 62, 24, 122, 214, 234, 32, 56, 255, 8, 123, 73, 149, 219, 0, 180, 123, 213, 95, 43, 184, 34, 10, 199, 240, 22, 198, 191, 129, 8, 182, 34, 176, 123, 53, 170, 68, 22, 180, 173, 89, 237, 245, 93, 69, 32, 234, 18, 150, 103, 22, 102, 21, 161, 158, 203, 242, 129, 18, 97, 146, 182, 24, 169, 139, 63, 188, 223, 204, 225, 197, 173, 95, 254, 254, 188, 136, 42, 217, 40, 220, 92, 150, 164, 52, 40, 167, 151],
						  [156, 228, 218, 85, 227, 179, 228, 21, 180, 222, 140, 29, 38, 207, 186, 81, 15, 73, 224, 17, 64, 34, 120, 187, 185, 196, 16, 78, 230, 189, 190, 227, 39, 70, 187, 203, 160, 142, 127, 58, 13, 95, 255, 198, 60, 134, 133, 228, 109, 146, 251, 102, 62, 69, 37, 231, 88, 227, 44, 163, 177, 33, 148, 153, 80, 89, 185, 114, 62, 102, 71, 121, 252, 13, 184, 188, 239, 66, 44, 33, 158, 203, 245, 210, 209, 37, 64, 162, 37, 230, 238, 176, 65, 93, 66, 221, 28, 63, 78, 155, 84, 82, 165, 115, 177, 145, 40, 128, 100, 140, 64, 155, 47, 86, 78, 87, 172, 21, 14, 41, 23, 135, 107, 213, 15],
						  [254, 148, 154, 247, 125, 207, 152, 232, 37, 30, 80, 225, 212, 247, 237, 104, 174, 73, 160, 163, 176, 204, 66, 189, 54, 163, 123, 238, 62, 136, 230, 126, 72, 49, 25, 148, 196, 214, 127, 81, 167, 160, 97, 81, 255, 239, 255, 157, 254, 11, 46, 201, 234, 123, 110, 180, 24, 25, 144, 253, 240, 146, 4, 55, 220, 68, 135, 187, 206, 187, 23, 205, 26, 99, 185, 147, 37, 197, 230, 143, 60, 65, 49, 201, 191, 173, 187, 73, 101, 205, 20, 23, 19, 70, 170, 242, 233, 76, 71, 167, 163, 83, 201, 153, 172, 250, 153, 243, 8, 188, 169, 56, 213, 157, 13, 242, 135, 116, 26, 245, 87, 194, 75, 124, 16],
						  [56, 97, 9, 225, 160, 214, 77, 211, 104, 210, 241, 31, 70, 106, 166, 244, 192, 160, 88, 235, 175, 181, 135, 247, 98, 126, 142, 152, 115, 152, 147, 106, 250, 162, 245, 178, 140, 147, 62, 194, 202, 176, 74, 148, 21, 147, 40, 177, 226, 131, 245, 109, 103, 138, 139, 70, 55, 122, 124, 25, 115, 119, 26, 51, 211, 169, 241, 51, 70, 2, 80, 208, 243, 244, 102, 147, 164, 146, 30, 45, 118, 19, 89, 213, 90, 18, 203, 253, 95, 148, 19, 4, 152, 54, 171, 145, 232, 252, 68, 239, 139, 98, 57, 169, 83, 234, 131, 95, 7, 172, 151, 98, 89, 207, 218, 167, 44, 205, 48, 94, 71, 244, 165, 127, 3],
						  [133, 196, 120, 228, 136, 168, 154, 5, 133, 184, 120, 31, 60, 238, 157, 81, 207, 159, 60, 151, 188, 113, 112, 68, 244, 78, 232, 191, 212, 241, 111, 126, 41, 228, 185, 39, 57, 31, 103, 76, 84, 167, 226, 59, 105, 250, 46, 228, 28, 232, 67, 212, 233, 29, 236, 157, 11, 202, 130, 1, 111, 37, 23, 216, 176, 32, 30, 35, 241, 16, 146, 209, 92, 69, 215, 191, 195, 229, 193, 192, 41, 68, 178, 60, 91, 201, 65, 114, 1, 11, 152, 237, 217, 194, 117, 126, 235, 177, 79, 141, 96, 57, 16, 214, 8, 123, 105, 34, 51, 17, 228, 24, 125, 22, 205, 224, 119, 111, 28, 71, 148, 119, 163, 164, 121],
						  [154, 73, 113, 211, 153, 140, 31, 89, 218, 253, 24, 176, 195, 163, 213, 209, 76, 153, 192, 94, 242, 123, 115, 153, 73, 237, 29, 211, 213, 68, 198, 124, 130, 104, 169, 40, 230, 189, 47, 97, 26, 137, 193, 20, 37, 96, 111, 245, 106, 170, 155, 7, 108, 97, 60, 245, 124, 104, 203, 122, 164, 144, 194, 238, 183, 157, 133, 184, 254, 238, 50, 240, 163, 104, 189, 160, 211, 23, 113, 74, 8, 133, 213, 151, 78, 100, 168, 117, 194, 125, 255, 172, 131, 250, 251, 235, 86, 180, 86, 71, 250, 94, 30, 17, 38, 24, 3, 211, 70, 118, 34, 77, 4, 111, 233, 191, 30, 247, 249, 8, 3, 210, 6, 8, 140],
						  [146, 8, 220, 91, 54, 49, 76, 123, 98, 129, 181, 136, 203, 40, 191, 207, 235, 124, 115, 153, 41, 16, 47, 207, 194, 193, 243, 28, 4, 87, 42, 255, 222, 169, 48, 21, 117, 108, 243, 138, 23, 38, 143, 16, 91, 161, 8, 106, 73, 203, 39, 153, 83, 123, 199, 169, 196, 71, 40, 177, 27, 50, 223, 118, 38, 174, 203, 167, 15, 139, 230, 251, 116, 182, 192, 221, 95, 194, 43, 151, 126, 37, 42, 137, 78, 194, 78, 199, 162, 184, 54, 46, 2, 157, 227, 184, 138, 52, 67, 44, 95, 220, 229, 208, 52, 13, 45, 181, 47, 166, 197, 6, 149, 211, 198, 43, 124, 86, 194, 86, 71, 137, 154, 137, 252],
						  [74, 32, 85, 222, 141, 215, 153, 247, 39, 184, 128, 126, 253, 100, 234, 54, 69, 155, 3, 202, 170, 194, 168, 225, 171, 220, 69, 153, 164, 102, 245, 160, 90, 203, 163, 149, 251, 124, 166, 192, 143, 201, 186, 58, 102, 92, 13, 236, 107, 224, 149, 35, 209, 255, 71, 155, 123, 129, 78, 216, 193, 37, 229, 245, 205, 214, 18, 184, 43, 55, 127, 181, 85, 22, 204, 169, 220, 54, 5, 50, 132, 113, 113, 228, 191, 200, 237, 77, 176, 12, 247, 53, 151, 212, 43, 59, 72, 178, 159, 175, 233, 105, 247, 178, 243, 49, 224, 231, 163, 34, 153, 22, 58, 11, 175, 55, 84, 124, 89, 81, 169, 218, 236, 118, 207],
						  [94, 95, 221, 202, 14, 101, 230, 219, 199, 2, 109, 105, 142, 32, 52, 95, 187, 166, 100, 234, 58, 134, 250, 160, 198, 200, 58, 178, 180, 234, 88, 152, 43, 68, 160, 60, 122, 156, 59, 93, 191, 72, 198, 214, 70, 196, 216, 95, 249, 88, 85, 250, 147, 71, 95, 161, 230, 27, 183, 4, 248, 69, 99, 196, 253, 209, 251, 212, 227, 250, 85, 42, 15, 112, 149, 16, 140, 115, 147, 86, 234, 253, 57, 58, 137, 187, 21, 225, 111, 217, 52, 126, 152, 16, 230, 134, 178, 44, 224, 60, 121, 107, 179, 219, 84, 71, 105, 105, 30, 179, 143, 86, 165, 149, 148, 136, 48, 69, 210, 30, 141, 64, 67, 127, 74],
						  [164, 126, 201, 250, 72, 137, 212, 192, 231, 38, 47, 206, 142, 188, 232, 249, 167, 1, 47, 234, 183, 32, 203, 111, 219, 108, 253, 137, 165, 145, 172, 66, 248, 175, 24, 23, 50, 235, 8, 63, 80, 225, 233, 0, 219, 103, 67, 154, 81, 140, 47, 184, 128, 42, 190, 84, 26, 202, 156, 119, 219, 46, 48, 0, 109, 244, 39, 67, 115, 227, 4, 4, 175, 61, 216, 67, 244, 36, 117, 196, 45, 52, 52, 160, 188, 153, 70, 195, 68, 73, 35, 4, 84, 225, 179, 109, 77, 210, 226, 111, 44, 51, 71, 63, 196, 179, 219, 161, 71, 126, 141, 43, 127, 145, 13, 154, 105, 96, 200, 151, 27, 122, 253, 197, 57],
						  [123, 255, 36, 6, 184, 162, 67, 198, 215, 187, 88, 241, 37, 8, 34, 7, 134, 110, 20, 30, 203, 146, 212, 216, 205, 42, 78, 142, 42, 158, 40, 104, 79, 167, 200, 33, 158, 223, 122, 29, 125, 44, 222, 59, 232, 28, 158, 89, 61, 6, 70, 5, 83, 254, 177, 132, 85, 190, 64, 137, 60, 15, 171, 219, 139, 32, 134, 39, 254, 233, 184, 28, 255, 85, 188, 80, 130, 52, 59, 116, 1, 22, 6, 125, 23, 241, 186, 196, 76, 91, 18, 214, 114, 164, 127, 213, 163, 138, 39, 190, 61, 26, 91, 114, 23, 205, 35, 238, 144, 159, 167, 44, 233, 4, 188, 102, 149, 155, 124, 237, 188, 252, 100, 125, 77], [3, 209, 12, 119, 177, 4, 171, 0, 192, 157, 53, 105, 121, 214, 251, 30, 72, 143, 47, 22, 118, 211, 190, 234, 43, 48, 68, 201, 38, 31, 222, 66, 121, 149, 133, 161, 201, 167, 162, 231, 139, 119, 38, 103, 69, 55, 79, 54, 84, 230, 238, 160, 208, 61, 183, 106, 231, 157, 237, 135, 61, 46, 80, 155, 20, 110, 167, 75, 46, 127, 182, 202, 25, 153, 133, 89, 15, 207, 231, 127, 48, 236, 52, 71, 62, 6, 31, 113, 66, 101, 205, 190, 43, 132, 38, 11, 33, 101, 227, 65, 47, 169, 62, 21, 236, 25, 86, 221, 202, 254, 15, 195, 218, 88, 181, 109, 95, 140, 143, 228, 76, 17, 125, 151, 255], [210, 245, 31, 44, 143, 196, 70, 214, 102, 127, 9, 195, 183, 245, 248, 176, 164, 198, 138, 92, 13, 163, 112, 15, 143, 29, 241, 183, 119, 81, 51, 126, 123, 136, 28, 112, 198, 181, 88, 90, 121, 162, 183, 14, 180, 72, 96, 252, 158, 89, 251, 19, 46, 28, 119, 112, 10, 244, 0, 169, 103, 66, 174, 90, 165, 30, 11, 75, 72, 56, 186, 37, 191, 202, 51, 172, 154, 165, 69, 80, 223, 249, 162, 89, 182, 114, 89, 193, 157, 150, 65, 90, 0, 200, 16, 93, 162, 113, 53, 254, 72, 169, 39, 121, 177, 163, 85, 45, 171, 228, 5, 135, 107, 127, 34, 179, 131, 55, 0, 24, 197, 224, 214, 85, 211], [252, 193, 179, 192, 51, 245, 115, 83, 231, 37, 17, 150, 10, 163, 133, 53, 37, 175, 87, 192, 82, 38, 47, 173, 247, 15, 220, 84, 222, 80, 27, 51, 169, 105, 97, 209, 135, 144, 152, 121, 49, 25, 201, 251, 78, 27, 184, 1, 218, 44, 150, 245, 102, 49, 13, 105, 87, 149, 41, 242, 59, 157, 203, 241, 250, 135, 46, 198, 94, 189, 195, 189, 95, 228, 22, 134, 225, 238, 134, 115, 137, 31, 77, 49, 43, 176, 211, 116, 31, 198, 214, 243, 120, 243, 153, 40, 202, 17, 75, 61, 229, 88, 85, 108, 98, 64, 21, 216, 40, 222, 103, 75, 132, 163, 34, 44, 198, 203, 166, 141, 234, 6, 214, 57, 212], [76, 75, 51, 54, 51, 146, 176, 210, 135, 196, 248, 242, 19, 88, 141, 206, 73, 205, 19, 202, 169, 121, 25, 243, 137, 190, 10, 172, 155, 159, 143, 251, 50, 116, 68, 153, 226, 164, 137, 213, 45, 96, 226, 108, 208, 248, 191, 28, 81, 33, 159, 206, 69, 14, 88, 98, 102, 29, 127, 16, 233, 25, 184, 101, 140, 188, 237, 203, 63, 15, 123, 190, 250, 228, 90, 242, 179, 176, 83, 132, 46, 145, 14, 197, 25, 83, 109, 113, 115, 105, 137, 209, 10, 4, 242, 67, 88, 4, 114, 129, 156, 140, 216, 192, 178, 235, 129, 111, 238, 154, 203, 52, 3, 191, 144, 152, 55, 246, 32, 172, 141, 166, 141, 133, 152], [96, 76, 123, 29, 206, 163, 71, 13, 254, 151, 132, 214, 207, 198, 18, 97, 175, 113, 243, 183, 153, 87, 92, 150, 49, 241, 65, 132, 93, 171, 45, 113, 181, 114, 157, 215, 169, 190, 133, 150, 237, 60, 240, 27, 36, 241, 99, 61, 195, 152, 211, 27, 77, 70, 102, 175, 209, 234, 73, 161, 92, 41, 249, 170, 90, 160, 29, 2, 231, 140, 107, 86, 81, 250, 45, 66, 222, 219, 206, 219, 244, 196, 2, 19, 102, 191, 7, 164, 97, 9, 2, 127, 115, 176, 159, 66, 52, 196, 156, 85, 33, 23, 152, 148, 233, 172, 222, 68, 175, 250, 183, 96, 84, 206, 9, 116, 114, 67, 108, 11, 86, 63, 187, 19, 192], [130, 24, 24, 55, 10, 24, 59, 213, 227, 194, 63, 129, 242, 78, 105, 4, 154, 215, 51, 138, 70, 214, 53, 60, 144, 58, 54, 254, 101, 102, 134, 103, 183, 209, 151, 82, 20, 254, 106, 246, 169, 120, 1, 6, 45, 56, 252, 76, 46, 38, 51, 131, 118, 233, 151, 135, 237, 25, 51, 89, 20, 148, 184, 160, 218, 59, 48, 23, 4, 70, 87, 168, 183, 224, 137, 47, 190, 175, 93, 58, 205, 204, 233, 139, 197, 244, 215, 85, 57, 67, 30, 81, 53, 213, 247, 224, 92, 194, 183, 14, 66, 247, 249, 57, 210, 225, 23, 32, 133, 160, 6, 114, 173, 48, 221, 127, 246, 177, 197, 76, 27, 5, 80, 240, 253], [84, 38, 251, 164, 123, 169, 142, 25, 114, 193, 206, 120, 40, 235, 227, 229, 45, 255, 228, 161, 60, 254, 9, 52, 206, 211, 18, 0, 46, 155, 105, 233, 174, 186, 27, 114, 232, 169, 242, 186, 231, 58, 49, 113, 1, 174, 181, 149, 191, 54, 23, 84, 252, 71, 209, 54, 130, 100, 96, 61, 201, 110, 234, 97, 173, 55, 212, 23, 63, 230, 234, 68, 255, 2, 24, 221, 247, 90, 88, 65, 53, 198, 164, 196, 214, 127, 140, 203, 175, 150, 231, 68, 70, 211, 153, 160, 111, 102, 107, 148, 176, 67, 91, 165, 59, 180, 245, 213, 146, 216, 6, 54, 12, 195, 74, 27, 28, 102, 136, 82, 146, 128, 74, 31, 151], [104, 16, 183, 231, 52, 114, 199, 121, 147, 24, 195, 198, 213, 160, 27, 6, 128, 103, 226, 115, 188, 100, 99, 150, 229, 90, 38, 95, 88, 61, 193, 20, 219, 142, 135, 66, 82, 130, 2, 169, 238, 79, 20, 78, 165, 26, 154, 251, 183, 37, 162, 112, 94, 34, 81, 212, 206, 47, 178, 113, 109, 169, 169, 184, 150, 111, 243, 4, 58, 177, 228, 123, 124, 20, 164, 195, 58, 197, 131, 144, 12, 191, 228, 249, 22, 151, 98, 164, 42, 49, 85, 3, 33, 107, 109, 217, 53, 105, 222, 36, 78, 12, 235, 169, 19, 44, 37, 27, 91, 128, 36, 116, 132, 208, 198, 230, 207, 221, 161, 8, 199, 60, 3, 32, 23], [37, 183, 54, 148, 154, 44, 144, 224, 195, 202, 15, 242, 80, 112, 69, 200, 151, 73, 152, 191, 5, 72, 63, 21, 2, 201, 43, 156, 107, 176, 108, 211, 72, 82, 94, 113, 129, 99, 58, 92, 27, 236, 37, 148, 34, 128, 50, 101, 249, 169, 182, 65, 120, 51, 145, 35, 99, 162, 248, 230, 168, 156, 78, 186, 161, 219, 86, 2, 160, 126, 113, 223, 141, 184, 68, 169, 245, 236, 228, 183, 156, 249, 55, 89, 41, 143, 71, 100, 134, 39, 38, 9, 15, 207, 108, 18, 133, 241, 76, 187, 200, 114, 148, 68, 237, 46, 203, 186, 5, 122, 84, 71, 228, 81, 91, 74, 247, 183, 20, 112, 249, 118, 32, 135, 189], [119, 21, 105, 184, 198, 240, 232, 23, 20, 165, 52, 140, 134, 89, 192, 193, 187, 39, 128, 192, 114, 207, 180, 176, 249, 246, 3, 71, 225, 84, 117, 39, 143, 108, 76, 95, 80, 185, 60, 117, 212, 169, 58, 246, 245, 245, 107, 82, 210, 11, 124, 22, 65, 82, 68, 20, 75, 28, 85, 132, 92, 207, 9, 145, 43, 110, 229, 241, 246, 87, 112, 210, 73, 93, 135, 85, 175, 232, 35, 117, 193, 197, 67, 55, 8, 103, 214, 76, 49, 90, 243, 19, 60, 47, 246, 66, 0, 220, 215, 189, 22, 219, 117, 246, 195, 179, 50, 217, 68, 130, 244, 119, 42, 145, 209, 131, 96, 2, 3, 60, 3, 192, 105, 161, 209], [185, 54, 79, 218, 129, 133, 216, 187, 141, 203, 104, 211, 247, 91, 189, 247, 129, 157, 176, 203, 70, 60, 117, 228, 82, 51, 109, 205, 173, 26, 82, 199, 2, 46, 74, 241, 222, 45, 32, 134, 113, 189, 40, 19, 196, 205, 146, 29, 89, 253, 224, 5, 103, 146, 99, 17, 118, 86, 18, 184, 122, 0, 80, 44, 141, 204, 180, 202, 207, 102, 7, 35, 46, 145, 178, 177, 141, 115, 99, 232, 206, 2, 133, 89, 208, 54, 37, 150, 174, 59, 131, 128, 226, 193, 247, 124, 173, 234, 235, 14, 246, 59, 132, 34, 195, 112, 117, 161, 211, 180, 4, 134, 127, 147, 47, 204, 175, 38, 91, 243, 160, 181, 111, 137, 93], [97, 255, 102, 120, 123, 135, 105, 117, 103, 127, 182, 79, 54, 61, 40, 252, 3, 21, 246, 190, 161, 252, 140, 251, 93, 143, 203, 113, 65, 27, 216, 244, 16, 177, 201, 89, 234, 61, 235, 161, 4, 6, 107, 194, 51, 166, 185, 132, 95, 134, 121, 137, 241, 175, 187, 94, 255, 217, 107, 214, 190, 186, 205, 143, 230, 92, 67, 117, 51, 138, 120, 221, 195, 100, 74, 76, 242, 4, 90, 215, 255, 68, 161, 249, 153, 128, 24, 203, 50, 83, 30, 110, 130, 243, 49, 230, 171, 133, 184, 184, 131, 176, 10, 210, 62, 179, 101, 89, 145, 181, 166, 249, 228, 40, 195, 146, 237, 74, 85, 172, 215, 207, 36, 40, 82], [175, 116, 160, 162, 149, 136, 202, 138, 227, 185, 230, 211, 85, 94, 11, 64, 120, 128, 40, 107, 85, 203, 52, 48, 32, 242, 27, 13, 203, 42, 53, 134, 79, 43, 199, 158, 117, 126, 145, 226, 64, 67, 87, 14, 17, 182, 166, 243, 239, 139, 227, 69, 90, 233, 222, 158, 177, 246, 116, 45, 226, 157, 187, 211, 133, 79, 155, 5, 0, 69, 176, 146, 240, 4, 251, 244, 153, 4, 220, 149, 118, 3, 191, 96, 210, 223, 202, 127, 83, 199, 193, 112, 134, 40, 216, 122, 139, 145, 137, 211, 96, 35, 93, 69, 148, 56, 233, 231, 139, 251, 96, 164, 9, 77, 25, 11, 95, 52, 144, 137, 64, 224, 4, 119, 46], [77, 7, 252, 111, 175, 215, 159, 255, 190, 237, 16, 169, 41, 74, 28, 136, 200, 36, 240, 92, 98, 128, 195, 6, 62, 127, 197, 226, 126, 17, 101, 235, 48, 106, 242, 199, 159, 165, 81, 21, 62, 129, 246, 152, 101, 184, 26, 111, 57, 120, 222, 166, 7, 85, 141, 61, 202, 124, 4, 21, 243, 79, 190, 45, 127, 80, 255, 46, 173, 30, 30, 182, 78, 54, 64, 249, 119, 162, 177, 224, 98, 10, 193, 183, 68, 128, 20, 248, 224, 150, 250, 97, 95, 178, 165, 239, 140, 82, 35, 79, 230, 151, 134, 187, 232, 0, 194, 94, 9, 186, 122, 164, 32, 198, 97, 254, 78, 144, 165, 209, 164, 56, 49, 34, 22], [66, 91, 16, 103, 54, 248, 98, 50, 16, 198, 250, 131, 25, 187, 113, 36, 6, 106, 251, 40, 239, 31, 184, 212, 188, 29, 136, 20, 36, 155, 39, 110, 49, 51, 118, 197, 97, 98, 127, 91, 212, 54, 183, 234, 218, 53, 85, 92, 205, 172, 80, 226, 180, 161, 166, 190, 211, 220, 165, 123, 109, 192, 130, 184, 231, 229, 203, 0, 17, 145, 8, 69, 154, 3, 153, 113, 109, 161, 11, 141, 79, 48, 19, 235, 182, 79, 70, 135, 187, 127, 119, 131, 153, 47, 204, 111, 39, 166, 247, 88, 249, 48, 153, 19, 195, 40, 28, 171, 178, 222, 213, 61, 116, 5, 195, 27, 156, 21, 163, 76, 167, 113, 78, 25, 201], [228, 46, 113, 221, 148, 201, 75, 67, 172, 42, 243, 25, 204, 134, 43, 204, 222, 66, 69, 246, 101, 249, 202, 100, 126, 124, 36, 136, 220, 165, 45, 57, 211, 216, 187, 178, 97, 164, 176, 12, 156, 86, 179, 226, 74, 225, 22, 119, 102, 191, 79, 43, 57, 27, 124, 75, 147, 7, 175, 56, 156, 230, 241, 11, 169, 107, 108, 104, 132, 247, 72, 9, 192, 22, 130, 87, 30, 145, 102, 138, 27, 238, 4, 34, 198, 138, 184, 55, 9, 149, 197, 118, 194, 50, 161, 248, 45, 95, 101, 234, 11, 20, 126, 156, 170, 250, 201, 80, 9, 177, 180, 181, 154, 120, 141, 31, 131, 198, 15, 143, 115, 77, 174, 201, 70], [44, 195, 116, 213, 123, 78, 218, 159, 168, 229, 67, 105, 70, 103, 70, 158, 69, 220, 74, 80, 162, 34, 60, 94, 162, 74, 15, 163, 211, 210, 155, 226, 140, 77, 96, 54, 67, 94, 13, 136, 118, 118, 118, 13, 183, 40, 244, 68, 240, 191, 94, 198, 251, 242, 70, 83,
 98, 115, 16, 209, 7, 138, 211, 113, 103, 104, 33, 90, 224, 250, 166, 234, 126, 218, 207, 21, 194, 160, 201, 19, 55, 231, 233, 21, 125, 202, 20, 198, 25, 97, 149, 225, 203, 155, 146, 236, 85, 216, 150, 27, 72, 237, 231, 46, 57, 92, 69, 201, 211, 165, 230, 12, 91, 232, 103, 232, 46, 128, 165, 83, 63, 46, 58, 230, 185], [43, 196, 81, 193, 194, 22, 87, 171, 76, 83, 74, 91, 26, 214, 157, 158, 228, 147, 92, 60, 67, 103, 1, 129, 6, 234, 254, 255, 2, 252, 121, 111, 243, 232, 209, 226, 40, 3, 125, 142, 106, 25, 94, 75, 28, 178, 18, 74, 16, 152, 169, 44, 25, 55, 213, 91, 82, 145, 90, 233, 184, 18, 47, 153, 165, 188, 194, 34, 218, 33, 149, 241, 68, 62, 140, 168, 211, 107, 107, 29, 55, 44, 247, 147, 218, 162, 132, 181, 66, 254, 254, 252, 92, 119, 148, 99, 0, 60, 12, 238, 60, 106, 212, 211, 23, 170, 179, 108, 5, 103, 144, 130, 34, 157, 153, 165, 3, 58, 170, 174, 202, 14, 89, 99, 169], [173, 245, 242, 18, 69, 246, 79, 235, 171, 236, 211, 28, 153, 161, 9, 106, 169, 181, 33, 76, 143, 15, 173, 192, 84, 199, 95, 59, 157, 161, 16, 139, 211, 44, 254, 121, 190, 231, 154, 110, 154, 89, 57, 191, 19, 103, 47, 227, 12, 247, 78, 97, 174, 247, 158, 167, 73, 50, 67, 105, 18, 235, 198, 59, 2, 159, 22, 44, 170, 239, 23, 52, 159, 11, 159, 107, 164, 102, 98, 146, 141, 163, 225, 60, 139, 76, 80, 140, 58, 7, 52, 105, 179, 163, 138, 72, 145, 125, 87, 36, 159, 173, 227, 25, 66, 14, 241, 25, 54, 196, 27, 44, 218, 200, 91, 228, 182, 159, 170, 101, 40, 238, 67, 47, 239], [49, 233, 158, 238, 240, 118, 114, 73, 132, 186, 200, 93, 169, 166, 232, 249, 15, 33, 243, 57, 179, 245, 236, 87, 144, 178, 65, 52, 207, 54, 166, 36, 154, 236, 205, 211, 122, 124, 81, 246, 196, 33, 174, 106, 220, 222, 175, 120, 88, 39, 249, 58, 237, 166, 49, 227, 90, 157, 207, 35, 55, 194, 167, 253, 31, 46, 111, 71, 0, 75, 76, 231, 149, 199, 228, 100, 105, 162, 153, 155, 222, 176, 45, 4, 206, 65, 150, 31, 189, 27, 0, 183, 56, 144, 15, 120, 221, 201, 162, 195, 207, 195, 222, 108, 88, 243, 71, 96, 196, 184, 213, 78, 147, 64, 68, 5, 36, 8, 73, 249, 223, 69, 43, 70, 212], [233, 217, 92, 232, 217, 230, 196, 181, 115, 95, 217, 3, 255, 121, 137, 210, 187, 17, 19, 247, 188, 57, 246, 40, 72, 143, 238, 40, 45, 125, 241, 39, 159, 27, 175, 5, 240, 232, 240, 169, 215, 180, 150, 148, 85, 18, 155, 133, 31, 242, 86, 26, 149, 13, 146, 248, 42, 64, 39, 142, 129, 67, 143, 140, 131, 7, 57, 89, 77, 228, 189, 89, 133, 120, 248, 92, 16, 175, 43, 74, 78, 253, 211, 196, 121, 225, 85, 107, 176, 27, 135, 59, 26, 85, 237, 204, 243, 154, 243, 119, 194, 199, 242, 134, 74, 222, 6, 147, 229, 195, 161, 21, 49, 181, 221, 139, 171, 138, 136, 50, 130, 200, 236, 123, 99], [172, 92, 160, 5, 4, 34, 6, 210, 50, 53, 228, 179, 112, 145, 128, 98, 17, 12, 47, 29, 111, 62, 61, 44, 66, 192, 94, 56, 94, 129, 150, 239, 38, 232, 141, 218, 165, 131, 82, 37, 141, 31, 195, 198, 170, 30, 132, 135, 91, 225, 35, 251, 102, 201, 91, 251, 55, 73, 220, 111, 54, 226, 132, 52, 17, 37, 36, 128, 228, 9, 254, 76, 0, 19, 199, 136, 77, 168, 200, 1, 251, 244, 223, 206, 35, 115, 1, 196, 246, 62, 183, 170, 155, 205, 28, 46, 187, 174, 41, 235, 148, 103, 90, 20, 196, 97, 153, 199, 54, 183, 249, 43, 224, 97, 71, 18, 98, 12, 122, 250, 199, 32, 157, 255, 230], [8, 18, 173, 28, 172, 21, 207, 60, 108, 234, 76, 119, 36, 18, 72, 250, 9, 241, 23, 124, 66, 7, 88, 25, 157, 49, 233, 87, 32, 54, 58, 254, 112, 32, 103, 218, 172, 205, 166, 61, 70, 164, 109, 23, 88, 171, 32, 61, 140, 72, 212, 86, 189, 84, 224, 124, 20, 68, 51, 192, 80, 8, 249, 41, 3, 3, 91, 45, 145, 213, 243, 64, 105, 73, 138, 230, 210, 122, 89, 19, 92, 255, 45, 154, 178, 214, 2, 120, 98, 60, 48, 185, 112, 237, 106, 141, 27, 99, 57, 76, 242, 254, 90, 81, 22, 27, 186, 145, 107, 222, 128, 171, 232, 22, 53, 26, 90, 80, 14, 248, 59, 36, 120, 227, 166], [214, 101, 166, 117, 56, 166, 116, 50, 121, 211, 102, 192, 112, 37, 241, 248, 27, 223, 74, 110, 232, 91, 198, 191, 69, 234, 99, 183, 138, 103, 171, 65, 16, 30, 143, 69, 56, 238, 234, 214, 87, 175, 112, 151, 80, 87, 117, 44, 210, 250, 110, 242, 236, 142, 7, 219, 126, 126, 167, 222, 113, 76, 2, 213, 22, 20, 240, 17, 217, 201, 245, 50, 231, 253, 123, 42, 6, 208, 111, 67, 183, 151, 122, 46, 8, 245, 156, 82, 235, 12, 232, 237, 70, 207, 94, 189, 237, 0, 36, 197, 170, 16, 151, 218, 138, 106, 41, 171, 28, 186, 26, 56, 196, 187, 238, 20, 187, 187, 89, 34, 104, 70, 171, 122, 58], [244, 107, 115, 164, 180, 136, 216, 141, 27, 32, 190, 176, 231, 248, 62, 240, 149, 231, 188, 33, 96, 234, 44, 41, 200, 91, 147, 39, 55, 84, 141, 57, 75, 254, 77, 104, 11, 150, 213, 67, 242, 177, 215, 227, 10, 149, 96, 32, 11, 118, 171, 210, 175, 167, 248, 227, 234, 155, 67, 156, 87, 133, 116, 247, 190, 147, 24, 75, 180, 145, 233, 85, 82, 146, 93, 89, 78, 82, 121, 59, 21, 162, 64, 225, 133, 189, 94, 105, 17, 162, 176, 75, 190, 229, 83, 154, 62, 12, 207, 255, 74, 234, 163, 79, 2, 169, 151, 242, 148, 75, 226, 173, 57, 245, 20, 71, 59, 157, 12, 205, 112, 228, 182, 47, 167], [28, 99, 113, 142, 100, 11, 42, 228, 44, 201, 99, 251, 162, 28, 184, 203, 75, 218, 189, 197, 190, 6, 145, 176, 179, 157, 228, 44, 110, 227, 212, 226, 147, 83, 217, 212, 71, 44, 73, 106, 155, 243, 171, 33, 192, 45, 3, 209, 139, 212, 89, 236, 70, 102, 95, 195, 148, 251, 21, 154, 155, 252, 237, 114, 13, 1, 78, 134, 153, 241, 63, 147, 213, 91, 251, 125, 14, 61, 141, 252, 34, 185, 246, 223, 132, 243, 61, 191, 8, 132, 83, 29, 74, 163, 236, 69, 182, 83, 27, 139, 184, 214, 182, 24, 148, 149, 39, 99, 93, 48, 85, 165, 161, 154, 138, 185, 49, 180, 73, 6, 70, 144, 190, 248, 210], [174, 83, 52, 111, 79, 113, 96, 58, 213, 235, 39, 59, 67, 8, 245, 178, 159, 185, 71, 226, 175, 88, 155, 14, 60, 113, 65, 72, 116, 157, 64, 107, 66, 40, 217, 57, 39, 9, 247, 220, 21, 100, 55, 16, 30, 240, 60, 129, 22, 33, 154, 5, 49, 63, 105, 102, 94, 179, 14, 46, 74, 142, 178, 180, 82, 123, 34, 50, 7, 111, 98, 144, 87, 2, 50, 109, 243, 187, 94, 225, 54, 92, 181, 194, 217, 109, 116, 208, 57, 160, 63, 238, 56, 69, 253, 184, 147, 20, 42, 167, 252, 59, 197, 145, 233, 159, 227, 115, 208, 148, 219, 96, 35, 243, 188, 91, 6, 251, 53, 202, 224, 43, 61, 73, 202], [205, 52, 86, 33, 186, 101, 173, 102, 206, 62, 119, 217, 255, 142, 139, 204, 182, 243, 207, 248, 142, 75, 232, 55, 62, 128, 250, 254, 118, 68, 15, 50, 27, 34, 255, 13, 91, 195, 167, 78, 155, 49, 39, 252, 238, 103, 150, 254, 251, 133, 175, 9, 16, 220, 60, 196, 230, 161, 192, 226, 235, 18, 16, 90, 155, 84, 251, 220, 68, 159, 199, 249, 56, 251, 240, 243, 80, 28, 200, 134, 253, 193, 180, 145, 164, 31, 14, 23, 65, 187, 178, 13, 174, 194, 49, 219, 176, 182, 210, 179, 28, 125, 126, 120, 159, 43, 33, 156, 58, 172, 86, 10, 166, 19, 235, 216, 215, 136, 10, 240, 11, 162, 193, 199, 165], [50, 250, 51, 105, 172, 254, 173, 85, 153, 186, 223, 103, 254, 38, 109, 147, 135, 24, 152, 205, 115, 47, 48, 172, 139, 34, 243, 218, 107, 177, 39, 154, 153, 221, 160, 102, 212, 205, 128, 232, 92, 9, 95, 255, 109, 239, 137, 222, 30, 102, 186, 236, 75, 123, 77, 153, 222, 210, 163, 32, 104, 211, 136, 146, 82, 131, 120, 207, 122, 58, 76, 98, 14, 125, 158, 237, 248, 223, 216, 18, 103, 81, 139, 69, 14, 132, 142, 90, 21, 248, 10, 28, 42, 160, 152, 32, 208, 186, 46, 203, 71, 120, 57, 61, 128, 254, 46, 121, 62, 160, 168, 199, 120, 216, 111, 73, 54, 89, 109, 140, 225, 209, 130, 28, 251], [191, 57, 162, 216, 243, 126, 142, 74, 185, 243, 188, 157, 10, 17, 27, 122, 129, 196, 158, 185, 62, 121, 226, 198, 4, 201, 130, 154, 46, 120, 152, 107, 82, 224, 162, 208, 17, 140, 41, 251, 241, 211, 170, 216, 51, 82, 133, 33, 180, 215, 167, 232, 14, 26, 94, 227, 69, 1, 205, 102, 156, 160, 42, 56, 80, 127, 66, 210, 163, 231, 244, 68, 133, 88, 167, 144, 101, 43, 212, 188, 93, 201, 193, 114, 10, 11, 117, 45, 236, 101, 134, 86, 25, 205, 219, 133, 76, 45, 188, 87, 60, 7, 222, 232, 253, 60, 114, 104, 97, 136, 147, 253, 195, 66, 220, 105, 110, 144, 96, 214, 92, 209, 74, 14, 148], [134, 120, 230, 127, 189, 234, 43, 5, 240, 68, 165, 203, 108, 196, 216, 131, 37, 48, 30, 26, 170, 120, 241, 181, 23, 2, 129, 195, 154, 202, 189, 67, 21, 91, 133, 86, 252, 173, 239, 67, 45, 162, 221, 72, 133, 59, 160, 22, 65, 255, 143, 184, 220, 144, 134, 135, 160, 223, 84, 161, 251, 77, 225, 27, 96, 76, 27, 117, 93, 18, 240, 133, 83, 239, 223, 59, 253, 20, 226, 182, 248, 234, 252, 57, 75, 63, 178, 47, 104, 145, 92, 86, 139, 108, 2, 92, 213, 39, 126, 255, 48, 168, 13, 145, 62, 201, 191, 54, 165, 78, 14, 41, 235, 245, 232, 137, 2, 168, 22, 231, 166, 66, 108, 24, 144], [165, 28, 36, 195, 47, 204, 130, 91, 122, 204, 45, 10, 106, 83, 198, 206, 145, 78, 61, 152, 251, 221, 158, 67, 183, 49, 188, 102, 250, 228, 198, 243, 137, 216, 46, 216, 188, 95, 222, 218, 47, 20, 174, 237, 114, 79, 253, 42, 148, 239, 223, 40, 244, 153, 76, 65, 153, 127, 218, 151, 24, 39, 23, 55, 217, 211, 48, 237, 129, 181, 130, 41, 8, 58, 236, 91, 93, 201, 23, 42, 213, 152, 160, 232, 230, 135, 174, 95, 108, 94, 40, 132, 54, 222, 9, 2, 202, 59, 6, 87, 244, 235, 207, 249, 155, 184, 202, 154, 44, 64, 69, 7, 97, 57, 8, 96, 13, 107, 246, 74, 123, 223, 97, 44, 154], [237, 75, 242, 216, 11, 59, 85, 78, 227, 248, 241, 10, 230, 124, 103, 150, 200, 26, 170, 4, 52, 221, 212, 253, 148, 18, 249, 204, 248, 249, 118, 31, 9, 216, 161, 32, 137, 213, 242, 59, 253, 177, 229, 223, 10, 82, 147, 98, 240, 176, 224, 118, 112, 173, 239, 67, 150, 199, 213, 184, 241, 82, 106, 144, 44, 247, 66, 88, 102, 80, 251, 51, 212, 252, 155, 120, 107, 24, 9, 183, 133, 182, 81, 89, 16, 32, 172, 220, 58, 116, 61, 114, 249, 132, 174, 181, 23, 136, 77, 53, 25, 224, 234, 56, 54, 52, 21, 53, 85, 60, 105, 185, 80, 149, 226, 255, 50, 78, 186, 171, 70, 62, 103, 224, 212], [3, 125, 242, 174, 146, 87, 43, 136, 190, 212, 184, 125, 77, 215, 116, 70, 219, 211, 209, 234, 185, 15, 226, 74, 5, 35, 43, 173, 161, 205, 84, 222, 31, 201, 18, 77, 29, 151, 214, 205, 155, 160, 176, 4, 143, 75, 206, 228, 105, 226, 176, 207, 101, 154, 43, 18, 171, 199, 64, 145, 109, 47, 159, 174, 81, 11, 14, 132, 123, 155, 216, 56, 30, 190, 132, 181, 63, 24, 63, 229, 152, 2, 232, 173, 120, 119, 179, 153, 145, 71, 193, 126, 53, 167, 98, 184, 232, 50, 75, 217, 210, 41, 47, 31, 217, 66, 243, 109, 228, 39, 189, 206, 202, 135, 255, 216, 225, 250, 213, 83, 73, 65, 248, 234, 66], [60, 108, 233, 242, 16, 80, 189, 60, 209, 56, 61, 189, 148, 20, 78, 60, 190, 156, 191, 155, 150, 248, 14, 73, 72, 215, 24, 156, 145, 110, 93, 250, 1, 62, 178, 34, 22, 213, 246, 158, 231, 172, 193, 243, 67, 70, 235, 230, 229, 76, 166, 45, 209, 198, 119, 202, 173, 23, 226, 142, 45, 84, 12, 158, 63, 43, 98, 27, 96, 243, 9, 61, 92, 9, 140, 105, 125, 227, 43, 164, 205, 23, 251, 11, 174, 223, 92, 212, 12, 162, 195, 131, 46, 58, 50, 86, 146, 73, 93, 130, 45, 78, 157, 208, 86, 30, 166, 92, 13, 29, 152, 199, 50, 163, 72, 211, 165, 132, 192, 61, 26, 103, 122, 121, 252], [197, 58, 137, 31, 162, 237, 208, 33, 247, 14, 208, 119, 9, 137, 51, 126, 64, 155, 208, 228, 42, 104, 72, 191, 86, 125, 216, 231, 21, 0, 237, 148, 85, 0, 30, 246, 139, 128, 194, 179, 108, 144, 23, 82, 35, 153, 45, 202, 62, 71, 143, 221, 107, 162, 175, 133, 231, 139, 125, 164, 174, 107, 235, 168, 8, 68, 1, 243, 2, 4, 88, 211, 250, 201, 41, 39, 15, 227, 63, 180, 192, 183, 198, 90, 4, 63, 236, 189, 98, 227, 4, 113, 10, 143, 183, 98, 46, 155, 113, 119, 252, 185, 18, 143, 252, 107, 3, 100, 202, 56, 142, 252, 87, 99, 89, 33, 65, 33, 65, 132, 116, 140, 98, 11, 129], [232, 1, 218, 26, 165, 221, 208, 140, 62, 238, 253, 185, 22, 114, 24, 142, 215, 229, 161, 2, 200, 99, 171, 41, 12, 115, 216, 38, 127, 100, 84, 168, 159, 32, 49, 14, 245, 221, 12, 171, 128, 126, 55, 242, 122, 174, 27, 170, 121, 37, 224, 48, 228, 63, 43, 31, 17, 193, 160, 33, 65, 31, 226, 28, 154, 221, 33, 52, 28, 26, 150, 195, 205, 49, 210, 119, 5, 232, 196, 237, 219, 51, 173, 13, 232, 168, 98, 55, 52, 6, 34, 99, 64, 131, 181, 215, 246, 227, 95, 124, 70, 22, 30, 65, 159, 223, 183, 159, 74, 75, 240, 158, 175, 149, 188, 4, 74, 29, 121, 27, 216, 176, 100, 102, 103], [35, 174, 96, 243, 239, 169, 171, 153, 214, 168, 83, 53, 232, 21, 253, 112, 1, 114, 117, 238, 109, 122, 246, 169, 192, 105, 204, 94, 3, 185, 5, 37, 183, 15, 58, 72, 148, 225, 99, 184, 22, 15, 101, 101, 145, 89, 112, 134, 89, 173, 125, 91, 100, 11, 90, 134, 51, 10, 70, 194, 56, 173, 107, 156, 233, 122, 189, 190, 87, 222, 33, 60, 73, 66, 97, 98, 193, 191, 162, 219, 125, 23, 96, 150, 76, 167, 126, 27, 143, 64, 250, 107, 41, 240, 33, 85, 198, 191, 255, 237, 91, 164, 191, 247, 253, 242, 137, 205, 18, 106, 112, 103, 231, 120, 202, 111, 156, 217, 193, 80, 191, 130, 43, 68, 43], [151, 227, 180, 117, 21, 238, 172, 218, 230, 239, 221, 209, 188, 254, 162, 139, 195, 12, 91, 226, 119, 135, 38, 183, 42, 150, 40, 141, 116, 50, 60, 36, 184, 19, 102, 170, 100, 168, 128, 154, 140, 97, 70, 133, 4, 153, 144, 177, 206, 207, 6, 241, 76, 203, 116, 116, 107, 242, 119, 239, 236, 174, 43, 160, 96, 219, 213, 107, 224, 230, 15, 191, 71, 65, 156, 4, 255, 181, 173, 115, 214, 217, 206, 153, 166, 11, 16, 71, 78, 169, 200, 195, 104, 200, 32, 197, 96, 243, 55, 168, 231, 155, 47, 87, 53, 90, 16, 250, 13, 95, 101, 35, 197, 145, 105, 119, 149, 35, 232, 29, 188, 5, 87, 167, 210], [200, 80, 56, 66, 214, 244, 35, 199, 105, 66, 105, 158, 221, 243, 81, 158, 103, 234, 141, 103, 3, 73, 228, 32, 204, 126, 168, 251, 235, 236, 20, 46, 147, 233, 177, 152, 200, 89, 212, 127, 91, 221, 234, 196, 93, 48, 201, 22, 122, 80, 140, 149, 34, 111, 252, 210, 62, 188, 39, 53, 166, 209, 230, 84, 129, 106, 22, 236, 13, 37, 236, 195, 175, 204, 99, 203, 19, 5, 128, 58, 69, 167, 237, 248, 236, 34, 42, 124, 224, 71, 241, 142, 82, 87, 9, 51, 90, 150, 63, 200, 86, 39, 5, 139, 78, 225, 183, 91, 110, 17, 110, 226, 24, 52, 199, 157, 227, 26, 2, 24, 193, 103, 127, 191, 122], [102, 46, 8, 215, 14, 7, 172, 98, 32, 112, 49, 85, 85, 22, 212, 55, 167, 165, 97, 106, 202, 219, 61, 118, 109, 54, 182, 165, 88, 7, 205, 161, 6, 199, 108, 234, 112, 33, 142, 188, 22, 34, 111, 210, 154, 255, 52, 87, 128, 48, 166, 198, 68, 170, 89, 162, 246, 34, 171, 9, 229, 195, 119, 6, 119, 10, 63, 158, 121, 219, 124, 40, 30, 70, 191, 255, 151, 103, 77, 192, 104, 19, 121, 227, 168, 68, 142, 162, 20, 212, 147, 12, 117, 169, 175, 124, 105, 27, 127, 113, 195, 164, 93, 226, 3, 33, 251, 35, 98, 26, 72, 104, 64, 46, 88, 104, 120, 40, 218, 239, 159, 84, 101, 125, 217], [90, 127, 155, 146, 229, 103, 139, 246, 40, 184, 203, 193, 85, 241, 225, 216, 221, 79, 246, 10, 195, 218, 42, 153, 78, 89, 131, 194, 237, 156, 232, 145, 192, 246, 36, 170, 69, 240, 100, 79, 97, 2, 6, 191, 251, 207, 212, 202, 191, 196, 250, 157, 36, 209, 19, 63, 197, 83, 99, 223, 130, 178, 250, 188, 29, 197, 217, 126, 124, 244, 17, 185, 14, 75, 133, 233, 75, 130, 126, 82, 6, 59, 47, 196, 203, 41, 96, 216, 84, 218, 129, 154, 195, 157, 210, 45, 55, 176, 73, 137, 107, 203, 157, 3, 86, 251, 0, 49, 35, 213, 213, 147, 220, 87, 90, 191, 95, 68, 101, 249, 93, 56, 230, 108, 95], [102, 30, 93, 98, 132, 209, 225, 55, 85, 40, 150, 43, 193, 63, 141, 32, 175, 15, 120, 244, 248, 51, 4, 31, 136, 3, 21, 49, 108, 3, 192, 136, 248, 242, 172, 219, 172, 189, 175, 161, 122, 184, 204, 193, 29, 182, 169, 51, 1, 233, 205, 71, 13, 62, 143, 127, 188, 231, 243, 211, 96, 1, 164, 8, 184, 23, 166, 227, 119, 248, 204, 41, 178, 219, 243, 51, 197, 150, 99, 73, 16, 65, 254, 44, 154, 239, 86, 228, 59, 246, 123, 124, 108, 87, 45, 54, 222, 14, 82, 167, 196, 143, 112, 131, 243, 63, 69, 251, 46, 170, 114, 33, 175, 193, 195, 223, 119, 114, 132, 59, 148, 44, 57, 45, 174], [96, 59, 188, 65, 160, 194, 0, 159, 31, 97, 198, 216, 163, 186, 64, 113, 54, 202, 4, 235, 161, 74, 151, 112, 255, 233, 75, 145, 74, 17, 163, 158, 63, 140, 244, 110, 253, 149, 192, 30, 170, 78, 107, 115, 26, 91, 249, 200, 153, 81, 11, 200, 172, 216, 242, 178, 200, 200, 36, 144, 144, 99, 201, 49, 67, 165, 27, 155, 234, 83, 70, 226, 247, 149, 74, 107, 111, 100, 4, 185, 52, 75, 192, 218, 86, 28, 49, 182, 242, 91, 26, 60, 173, 222, 76, 206, 125, 17, 60, 123, 203, 250, 154, 88, 192, 45, 237, 195, 140, 227, 188, 5, 61, 59, 42, 62, 250, 115, 11, 245, 140, 48, 92, 196, 247], [222, 152, 64, 50, 166, 32, 94, 207, 10, 201, 250, 32, 63, 106, 60, 92, 92, 2, 228, 160, 62, 20, 65, 105, 82, 44, 131, 17, 43, 63, 152, 186, 87, 216, 0, 127, 153, 23, 150, 227, 71, 251, 160, 180, 107, 50, 22, 121, 18, 96, 72, 153, 110, 68, 110, 183, 142, 65, 216, 38, 130, 133, 195, 83, 204, 233, 42, 130, 217, 73, 104, 36, 137, 98, 190, 83, 214, 78, 161, 222, 194, 13, 126, 39, 138, 63, 56, 208, 33, 168, 45, 185, 170, 139, 74, 115, 140, 5, 50, 193, 113, 193, 53, 63, 89, 156, 250, 48, 178, 144, 138, 50, 24, 87, 162, 199, 92, 176, 206, 244, 65, 132, 4, 79, 64], [73, 193, 136, 27, 189, 127, 214,
 234, 93, 224, 181, 239, 146, 141, 219, 117, 156, 44, 156, 208, 160, 46, 40, 39, 122, 47, 84, 29, 43, 146, 252, 5, 217, 69, 245, 254, 63, 207, 7, 97, 3, 217, 176, 125, 21, 229, 86, 115, 89, 38, 187, 68, 180, 26, 216, 253, 194, 87, 191, 57, 173, 127, 60, 148, 153, 247, 150, 135, 109, 1, 201, 111, 156, 18, 237, 249, 29, 182, 3, 235, 168, 152, 181, 54, 2, 179, 95, 205, 181, 4, 51, 220, 251, 101, 43, 78, 210, 63, 249, 3, 79, 128, 115, 240, 202, 191, 153, 186, 219, 93, 137, 55, 224, 224, 82, 71, 181, 222, 2, 183, 101, 56, 97, 145, 20], [68, 202, 215, 169, 16, 82, 101, 245, 136, 60, 215, 250, 253, 65, 166, 204, 199, 67, 56, 55, 10, 64, 79, 176, 6, 121, 26, 175, 219, 4, 222, 245, 148, 144, 248, 42, 219, 126, 78, 95, 127, 143, 58, 134, 126, 219, 101, 242, 52, 92, 96, 76, 117, 61, 67, 205, 19, 140, 98, 74, 218, 9, 102, 46, 26, 194, 208, 156, 118, 113, 172, 218, 245, 31, 218, 26, 155, 56, 137, 186, 143, 179, 214, 126, 163, 24, 93, 20, 0, 26, 164, 108, 146, 241, 143, 51, 220, 94, 129, 251, 186, 171, 155, 57, 49, 6, 66, 169, 184, 185, 190, 121, 141, 107, 196, 44, 54, 66, 61, 21, 97, 98, 228, 50, 38], [175, 154, 242, 103, 78, 22, 65, 98, 214, 129, 177, 187, 229, 60, 223, 34, 247, 214, 11, 85, 140, 66, 148, 23, 31, 97, 203, 253, 38, 84, 224, 196, 199, 205, 139, 105, 94, 1, 81, 111, 4, 233, 132, 155, 112, 151, 137, 60, 87, 114, 23, 121, 149, 20, 75, 142, 68, 138, 26, 127, 107, 59, 0, 177, 188, 166, 42, 135, 68, 209, 150, 166, 29, 5, 182, 112, 143, 90, 131, 8, 54, 195, 131, 105, 226, 112, 166, 137, 104, 202, 79, 228, 118, 222, 188, 75, 245, 47, 253, 92, 235, 94, 90, 96, 251, 92, 144, 10, 158, 83, 90, 201, 96, 35, 73, 36, 218, 125, 232, 206, 51, 70, 6, 51, 193], [196, 10, 56, 6, 22, 67, 127, 42, 137, 73, 6, 4, 54, 173, 43, 103, 71, 245, 227, 83, 157, 169, 245, 79, 124, 28, 136, 63, 10, 22, 52, 151, 52, 212, 72, 0, 114, 12, 116, 218, 197, 75, 180, 146, 115, 196, 57, 251, 86, 56, 114, 52, 144, 182, 39, 170, 60, 184, 43, 22, 77, 91, 219, 171, 92, 217, 76, 154, 146, 178, 53, 138, 255, 188, 135, 39, 1, 76, 75, 163, 75, 199, 228, 244, 34, 57, 218, 142, 74, 46, 165, 65, 93, 197, 180, 163, 253, 217, 246, 211, 170, 70, 125, 196, 214, 254, 252, 117, 196, 42, 215, 112, 44, 120, 185, 1, 104, 8, 185, 242, 68, 56, 30, 178, 184], [71, 150, 235, 73, 215, 124, 107, 114, 28, 70, 60, 73, 193, 13, 217, 190, 27, 54, 37, 244, 80, 15, 75, 187, 72, 40, 125, 39, 6, 213, 76, 93, 240, 71, 153, 240, 210, 172, 227, 6, 146, 56, 79, 30, 16, 88, 82, 5, 202, 216, 232, 132, 156, 116, 216, 80, 139, 47, 193, 64, 108, 205, 28, 112, 200, 94, 39, 239, 244, 160, 207, 194, 84, 27, 190, 217, 99, 138, 55, 53, 39, 185, 171, 14, 122, 144, 83, 54, 33, 108, 5, 158, 96, 103, 16, 123, 137, 43, 22, 247, 23, 24, 161, 47, 158, 4, 182, 144, 203, 99, 161, 200, 182, 66, 49, 169, 208, 51, 76, 12, 195, 244, 19, 148, 82], [77, 237, 40, 47, 118, 110, 72, 82, 174, 229, 67, 173, 148, 184, 220, 20, 198, 122, 106, 38, 78, 254, 49, 7, 73, 158, 44, 255, 48, 232, 160, 86, 151, 82, 34, 143, 186, 180, 45, 36, 91, 235, 132, 242, 131, 226, 71, 63, 249, 20, 186, 146, 205, 209, 66, 225, 187, 160, 191, 42, 211, 230, 134, 21, 29, 125, 4, 79, 53, 148, 192, 81, 204, 37, 114, 198, 236, 47, 178, 238, 239, 238, 55, 43, 92, 55, 203, 221, 102, 205, 168, 33, 162, 175, 248, 108, 243, 58, 142, 232, 19, 79, 240, 74, 109, 163, 16, 194, 31, 185, 220, 242, 109, 27, 108, 11, 216, 138, 129, 90, 42, 72, 35, 140, 207], [41, 152, 231, 214, 109, 132, 94, 27, 47, 219, 175, 152, 84, 101, 178, 214, 246, 243, 82, 223, 181, 199, 5, 101, 39, 74, 165, 162, 7, 77, 234, 75, 255, 162, 58, 208, 134, 1, 230, 64, 230, 49, 18, 111, 96, 215, 85, 193, 110, 178, 107, 97, 7, 189, 186, 8, 154, 157, 63, 255, 233, 211, 210, 180, 180, 218, 171, 58, 90, 234, 219, 191, 90, 83, 223, 195, 145, 223, 145, 50, 44, 53, 45, 8, 210, 53, 254, 51, 227, 16, 148, 215, 108, 114, 232, 195, 58, 100, 240, 63, 179, 237, 211, 202, 3, 191, 114, 145, 137, 135, 157, 212, 123, 2, 212, 16, 7, 13, 78, 191, 162, 171, 87, 220, 123], [200, 98, 201, 26, 219, 65, 199, 88, 206, 162, 81, 223, 118, 50, 64, 60, 200, 133, 81, 165, 104, 47, 47, 13, 223, 5, 78, 14, 40, 195, 12, 66, 232, 183, 95, 122, 113, 152, 99, 125, 193, 133, 26, 140, 42, 73, 11, 52, 56, 235, 62, 54, 72, 144, 134, 92, 47, 39, 253, 185, 106, 200, 51, 251, 11, 211, 37, 249, 39, 107, 214, 192, 160, 230, 82, 92, 152, 5, 91, 16, 60, 175, 177, 247, 2, 81, 130, 62, 98, 15, 11, 78, 110, 186, 58, 111, 15, 167, 70, 112, 42, 64, 137, 140, 246, 102, 47, 178, 150, 239, 253, 223, 204, 98, 128, 88, 101, 143, 201, 52, 159, 84, 105, 249, 221], [228, 216, 139, 163, 55, 196, 219, 102, 180, 191, 32, 230, 85, 17, 129, 209, 150, 180, 203, 15, 58, 92, 165, 219, 95, 183, 125, 37, 110, 190, 190, 74, 160, 62, 4, 163, 5, 168, 109, 238, 164, 119, 33, 197, 145, 108, 111, 52, 142, 38, 215, 222, 162, 163, 101, 100, 25, 252, 255, 23, 140, 215, 61, 63, 231, 87, 167, 196, 121, 10, 145, 9, 2, 236, 145, 67, 206, 18, 20, 172, 8, 35, 240, 48, 212, 154, 140, 162, 177, 204, 40, 160, 252, 24, 201, 152, 232, 252, 62, 191, 52, 14, 114, 24, 5, 71, 53, 165, 223, 115, 87, 45, 97, 188, 2, 26, 132, 22, 56, 24, 155, 38, 135, 168, 194], [138, 87, 70, 235, 61, 64, 163, 75, 211, 228, 62, 123, 244, 250, 143, 164, 247, 115, 47, 135, 151, 42, 180, 124, 105, 39, 38, 253, 30, 108, 6, 110, 239, 197, 96, 249, 53, 174, 106, 160, 159, 232, 78, 54, 66, 112, 186, 197, 231, 103, 204, 96, 35, 142, 216, 84, 157, 52, 75, 236, 54, 56, 123, 8, 235, 95, 136, 14, 243, 231, 180, 135, 60, 43, 181, 220, 108, 77, 203, 220, 170, 27, 225, 139, 189, 50, 25, 195, 216, 99, 150, 96, 206, 90, 141, 252, 221, 55, 25, 127, 56, 112, 58, 27, 18, 136, 122, 33, 51, 141, 115, 207, 200, 201, 51, 112, 137, 253, 105, 87, 104, 177, 147, 147, 1], [48, 94, 244, 156, 122, 87, 161, 35, 85, 95, 170, 233, 72, 6, 242, 219, 171, 10, 90, 135, 39, 87, 4, 180, 242, 0, 250, 126, 241, 56, 23, 8, 148, 116, 85, 75, 48, 51, 155, 171, 231, 251, 179, 131, 249, 129, 186, 234, 6, 180, 154, 170, 247, 57, 138, 10, 75, 210, 112, 72, 182, 254, 15, 125, 220, 184, 105, 45, 99, 193, 55, 140, 230, 89, 135, 178, 169, 200, 213, 141, 158, 97, 21, 175, 62, 221, 232, 177, 147, 56, 4, 255, 75, 238, 76, 148, 83, 155, 249, 147, 33, 150, 7, 232, 20, 111, 144, 63, 27, 250, 156, 2, 220, 180, 0, 25, 128, 70, 179, 145, 79, 44, 138, 73, 100], [221, 41, 148, 112, 16, 242, 181, 127, 197, 216, 204, 50, 133, 154, 159, 88, 223, 165, 71, 102, 128, 69, 213, 102, 154, 156, 43, 152, 236, 93, 192, 223, 49, 70, 226, 160, 183, 239, 181, 218, 238, 215, 210, 236, 14, 13, 215, 45, 71, 154, 124, 191, 65, 150, 27, 201, 64, 206, 3, 236, 235, 27, 43, 28, 138, 54, 170, 49, 148, 246, 169, 31, 62, 27, 104, 73, 253, 69, 114, 79, 154, 159, 3, 248, 102, 58, 34, 0, 78, 61, 49, 126, 104, 53, 242, 12, 227, 200, 28, 62, 153, 207, 247, 94, 120, 133, 224, 63, 221, 74, 11, 94, 72, 123, 87, 102, 243, 245, 148, 148, 51, 252, 188, 140, 200], [197, 54, 237, 213, 217, 75, 14, 145, 234, 61, 199, 5, 155, 17, 227, 21, 181, 71, 239, 234, 141, 4, 81, 183, 107, 178, 199, 32, 89, 77, 180, 173, 235, 71, 142, 155, 201, 34, 247, 192, 241, 92, 132, 66, 165, 178, 206, 34, 23, 15, 81, 118, 49, 54, 255, 243, 165, 118, 121, 53, 89, 196, 215, 32, 31, 128, 58, 19, 37, 226, 191, 15, 89, 164, 55, 230, 193, 68, 102, 100, 129, 251, 224, 146, 115, 103, 82, 222, 98, 44, 12, 49, 104, 17, 71, 2, 184, 208, 36, 174, 94, 254, 97, 106, 242, 180, 182, 70, 34, 224, 218, 192, 36, 40, 65, 152, 51, 60, 255, 118, 26, 169, 11, 114, 148], [128, 199, 183, 34, 80, 147, 38, 123, 159, 204, 29, 56, 241, 134, 15, 16, 173, 215, 133, 102, 171, 30, 71, 104, 168, 31, 120, 252, 37, 18, 177, 36, 213, 41, 245, 66, 138, 21, 53, 18, 254, 115, 179, 220, 244, 155, 116, 10, 28, 13, 100, 194, 9, 246, 26, 198, 193, 64, 220, 218, 70, 59, 224, 60, 188, 180, 99, 175, 223, 29, 121, 118, 47, 5, 116, 211, 23, 7, 127, 29, 39, 29, 64, 224, 92, 144, 22, 160, 179, 125, 149, 66, 203, 245, 62, 39, 39, 128, 105, 253, 182, 112, 227, 154, 187, 149, 125, 136, 163, 53, 27, 177, 210, 248, 143, 40, 104, 70, 118, 156, 107, 62, 190, 72, 18], [120, 225, 232, 58, 10, 255, 17, 138, 142, 196, 153, 43, 30, 142, 196, 253, 9, 195, 196, 227, 22, 114, 105, 194, 94, 220, 26, 156, 16, 178, 13, 172, 134, 110, 14, 174, 222, 218, 29, 55, 198, 147, 237, 217, 133, 83, 195, 239, 121, 67, 7, 143, 140, 43, 127, 151, 172, 202, 19, 140, 185, 137, 128, 6, 63, 157, 164, 135, 91, 227, 236, 8, 225, 4, 238, 18, 183, 245, 111, 209, 29, 40, 141, 160, 32, 225, 92, 132, 141, 132, 253, 65, 116, 89, 75, 25, 119, 58, 19, 94, 225, 162, 21, 116, 31, 132, 131, 8, 180, 22, 120, 179, 55, 39, 227, 57, 39, 121, 104, 166, 190, 212, 36, 218, 144], [73, 12, 167, 184, 171, 208, 191, 240, 150, 15, 82, 188, 22, 148, 76, 13, 54, 108, 160, 176, 110, 193, 16, 76, 195, 40, 39, 114, 214, 62, 26, 241, 225, 162, 137, 99, 150, 124, 168, 124, 185, 118, 233, 161, 59, 123, 227, 209, 185, 40, 180, 39, 185, 247, 117, 229, 214, 117, 64, 125, 208, 70, 133, 146, 174, 160, 60, 41, 209, 215, 75, 253, 101, 92, 232, 7, 85, 61, 214, 134, 240, 51, 64, 17, 220, 12, 85, 37, 67, 198, 216, 181, 65, 205, 123, 150, 60, 172, 172, 55, 23, 37, 181, 229, 209, 230, 223, 148, 244, 68, 93, 42, 77, 3, 189, 232, 194, 164, 224, 90, 143, 49, 118, 152, 252], [174, 24, 218, 146, 165, 196, 163, 91, 73, 21, 107, 220, 142, 160, 50, 177, 145, 84, 60, 147, 140, 249, 224, 114, 86, 147, 132, 54, 118, 142, 72, 49, 105, 86, 14, 20, 99, 3, 250, 13, 189, 104, 144, 218, 227, 64, 232, 151, 56, 61, 227, 221, 252, 134, 44, 70, 142, 59, 181, 40, 113, 38, 167, 80, 171, 141, 232, 37, 161, 19, 221, 51, 162, 97, 18, 4, 125, 70, 192, 112, 100, 135, 240, 77, 248, 95, 254, 144, 67, 101, 45, 109, 1, 222, 34, 251, 106, 91, 19, 214, 134, 194, 120, 178, 247, 92, 153, 118, 149, 248, 250, 200, 182, 246, 151, 49, 112, 57, 147, 214, 228, 166, 126, 217, 59], [90, 237, 163, 58, 177, 203, 65, 247, 250, 210, 120, 14, 148, 137, 110, 209, 31, 165, 133, 162, 210, 200, 226, 217, 204, 133, 27, 137, 248, 112, 173, 23, 157, 229, 209, 113, 85, 105, 56, 168, 66, 10, 10, 194, 46, 170, 180, 32, 25, 107, 185, 101, 80, 202, 117, 148, 82, 191, 169, 211, 110, 127, 6, 18, 10, 52, 203, 248, 21, 80, 144, 154, 12, 117, 126, 17, 139, 63, 193, 205, 67, 138, 43, 39, 37, 212, 10, 7, 77, 48, 200, 99, 159, 165, 217, 11, 154, 140, 234, 103, 51, 135, 241, 192, 149, 219, 47, 113, 208, 142, 247, 145, 125, 195, 8, 254, 201, 190, 55, 231, 114, 12, 203, 118, 228], [189, 244, 55, 159, 170, 73, 42, 48, 86, 106, 250, 127, 42, 72, 206, 242, 119, 30, 252, 129, 210, 159, 172, 77, 18, 164, 208, 2, 137, 107, 250, 255, 160, 120, 164, 236, 247, 41, 53, 217, 39, 192, 65, 6, 82, 62, 85, 101, 224, 58, 19, 217, 253, 87, 249, 71, 214, 204, 4, 151, 60, 222, 150, 138, 165, 190, 84, 72, 148, 104, 190, 128, 241, 236, 107, 169, 69, 84, 242, 5, 162, 213, 91, 76, 240, 34, 2, 159, 96, 102, 48, 234, 169, 48, 31, 239, 80, 34, 179, 115, 176, 7, 98, 140, 145, 218, 156, 188, 206, 130, 103, 39, 78, 52, 110, 143, 91, 134, 52, 64, 196, 169, 141, 242, 107], [86, 1, 118, 110, 46, 75, 73, 84, 243, 0, 165, 39, 26, 70, 225, 217, 241, 167, 154, 60, 123, 201, 193, 197, 242, 181, 159, 162, 40, 109, 85, 142, 73, 223, 226, 250, 128, 61, 222, 178, 91, 12, 187, 238, 177, 217, 109, 97, 195, 191, 91, 5, 100, 226, 184, 99, 2, 158, 168, 48, 188, 129, 6, 139, 17, 140, 245, 203, 22, 129, 140, 29, 15, 241, 232, 251, 88, 242, 53, 19, 189, 14, 78, 90, 67, 42, 214, 61, 28, 227, 31, 160, 49, 142, 99, 8, 170, 162, 86, 187, 7, 206, 213, 31, 33, 98, 75, 136, 42, 88, 227, 22, 141, 101, 209, 88, 1, 159, 140, 179, 60, 174, 238, 44, 237], [45, 59, 46, 93, 44, 95, 162, 10, 86, 5, 111, 191, 235, 41, 126, 157, 97, 67, 158, 27, 194, 146, 91, 142, 71, 161, 211, 115, 96, 139, 102, 90, 151, 132, 225, 135, 47, 250, 181, 186, 178, 230, 87, 18, 197, 79, 107, 222, 177, 147, 106, 175, 137, 46, 107, 132, 111, 239, 133, 16, 59, 95, 243, 71, 239, 165, 190, 193, 17, 165, 53, 183, 4, 81, 215, 243, 171, 172, 51, 95, 183, 156, 83, 239, 95, 11, 224, 233, 222, 204, 242, 124, 129, 191, 172, 247, 205, 153, 20, 119, 55, 215, 218, 137, 205, 14, 83, 85, 153, 101, 71, 66, 170, 27, 46, 158, 72, 177, 234, 202, 84, 235, 0, 75, 102], [88, 154, 157, 41, 94, 120, 104, 223, 46, 125, 78, 191, 2, 244, 81, 176, 51, 241, 201, 108, 241, 192, 237, 124, 49, 198, 65, 162, 68, 204, 167, 144, 217, 201, 36, 177, 250, 13, 113, 91, 120, 188, 185, 174, 0, 203, 39, 117, 70, 255, 96, 22, 108, 154, 222, 47, 173, 196, 92, 217, 77, 145, 159, 198, 246, 17, 133, 215, 91, 83, 203, 54, 238, 42, 177, 51, 207, 6, 82, 163, 65, 196, 232, 5, 248, 205, 216, 27, 155, 217, 132, 59, 230, 190, 242, 171, 186, 57, 91, 217, 196, 40, 76, 3, 172, 132, 101, 232, 222, 24, 237, 144, 20, 62, 250, 235, 187, 25, 189, 129, 217, 172, 151, 12, 136], [91, 150, 182, 213, 8, 228, 166, 152, 18, 57, 182, 18, 202, 127, 89, 43, 48, 64, 74, 252, 220, 140, 176, 234, 124, 234, 20, 39, 167, 190, 19, 75, 51, 195, 40, 172, 154, 216, 205, 11, 94, 131, 40, 221, 59, 98, 133, 155, 124, 25, 191, 242, 110, 223, 140, 95, 141, 23, 204, 92, 145, 139, 2, 208, 106, 9, 212, 66, 140, 136, 236, 162, 49, 113, 115, 9, 166, 113, 32, 147, 235, 215, 168, 199, 243, 6, 175, 174, 163, 177, 227, 77, 236, 255, 107, 87, 199, 130, 206, 16, 40, 249, 176, 42, 106, 189, 155, 149, 161, 231, 239, 15, 79, 85, 180, 220, 212, 11, 145, 251, 120, 192, 67, 193, 63], [49, 202, 111, 108, 56, 148, 91, 81, 205, 209, 180, 111, 214, 142, 163, 185, 54, 162, 200, 115, 206, 253, 237, 146, 230, 80, 90, 204, 147, 1, 171, 237, 88, 50, 196, 214, 214, 210, 96, 14, 114, 70, 41, 209, 11, 166, 127, 85, 241, 46, 189, 11, 199, 98, 82, 234, 188, 122, 89, 241, 102, 165, 67, 150, 33, 15, 105, 236, 235, 125, 227, 123, 90, 236, 56, 169, 81, 125, 236, 35, 3, 16, 208, 240, 197, 36, 213, 133, 61, 12, 224, 246, 30, 149, 203, 20, 186, 204, 225, 219, 63, 53, 74, 134, 57, 86, 187, 211, 173, 72, 124, 247, 107, 135, 49, 168, 37, 234, 251, 125, 133, 175, 151, 227, 169], [230, 132, 140, 18, 71, 75, 147, 13, 113, 189, 185, 149, 157, 81, 156, 243, 225, 150, 79, 65, 75, 149, 196, 131, 116, 14, 108, 155, 75, 6, 132, 186, 207, 244, 87, 176, 79, 160, 191, 193, 248, 86, 246, 89, 247, 194, 7, 33, 175, 115, 158, 105, 114, 76, 142, 61, 100, 182, 255, 235, 6, 116, 103, 186, 16, 204, 50, 168, 34, 138, 40, 28, 228, 126, 125, 131, 93, 125, 116, 233, 90, 20, 136, 142, 46, 97, 32, 67, 155, 31, 106, 116, 124, 244, 237, 50, 26, 163, 37, 100, 244, 59, 226, 42, 243, 101, 51, 110, 249, 153, 4, 220, 57, 226, 99, 233, 0, 128, 208, 138, 252, 90, 168, 247, 145], [153, 135, 127, 174, 140, 158, 225, 57, 93, 249, 3, 163, 240, 253, 83, 91, 33, 221, 155, 48, 226, 175, 93, 99, 55, 118, 109, 157, 156, 163, 241, 52, 153, 107, 79, 165, 80, 98, 202, 87, 80, 80, 166, 242, 213, 137, 117, 134, 241, 155, 189, 74, 156, 170, 181, 161, 230, 157, 217, 201, 213, 2, 206, 28, 209, 181, 71, 233, 140, 9, 103, 106, 131, 150, 191, 12, 164, 218, 195, 166, 102, 110, 225, 140, 54, 38, 124, 82, 166, 245, 240, 23, 199, 249, 127, 143, 192, 30, 51, 28, 175, 141, 189, 224, 145, 56, 241, 68, 37, 166, 211, 77, 77, 153, 102, 45, 224, 125, 167, 133, 149, 11, 71, 34, 160], [184, 228, 109, 94, 164, 239, 116, 235, 185, 170, 101, 132, 130, 11, 71, 61, 210, 218, 202, 249, 24, 30, 191, 8, 223, 16, 167, 251, 144, 170, 34, 38, 47, 57, 81, 44, 239, 97, 37, 220, 141, 238, 231, 77, 169, 37, 93, 173, 232, 221, 10, 205, 150, 3, 199, 9, 4, 115, 165, 218, 77, 132, 114, 167, 234, 102, 181, 78, 96, 75, 105, 157, 92, 51, 13, 20, 65, 178, 35, 167, 161, 117, 106, 103, 155, 83, 217, 138, 119, 111, 181, 13, 70, 225, 63, 192, 13, 227, 106, 194, 25, 228, 224, 204, 101, 105, 194, 63, 47, 89, 62, 83, 107, 61, 250, 183, 162, 212, 97, 107, 46, 184, 244, 130, 57], [233, 8, 3, 194, 215, 204, 51, 181, 184, 158, 33, 222, 153, 117, 43, 199, 241, 8, 140, 165, 23, 72, 127, 90, 4, 65, 79, 71, 240, 19, 31, 107, 150, 190, 212, 80, 214, 88, 89, 77, 92, 186, 56, 83, 15, 254, 104, 156, 206, 191, 135, 164, 14, 13, 169, 14, 240, 17, 73, 208, 23, 193, 86, 80, 51, 7, 178, 114, 47, 214, 33, 57, 243, 237, 212, 225, 68, 0, 159, 243, 240, 131, 65, 165, 187, 49, 244, 252, 100, 64, 112, 66, 73, 115, 42, 48, 206, 144, 53, 127, 115, 128, 94, 154, 168, 236, 136, 67, 167, 216, 191, 74, 17, 197, 24, 101, 93, 7, 73, 17, 121, 82, 203, 165, 5], [246, 247, 176, 96, 207, 231, 109, 232, 134, 225, 60, 143, 172, 172, 95, 130, 174, 249, 233, 49, 175, 134, 32, 187, 218, 13, 64, 48, 116, 234, 56, 61, 151, 64, 177, 157, 231, 223, 42, 93, 203, 99, 72, 113, 8, 101, 181, 77, 24, 185, 117, 85, 191, 81, 51, 84, 115, 77, 217, 103, 142, 25, 205, 151, 199, 215, 243, 239, 164, 69, 153, 0, 38, 128, 159, 106, 34, 30, 210, 7,
1, 73, 246, 82, 124, 200, 81, 214, 200, 99, 127, 179, 36, 115, 141, 71, 205, 63, 77, 105, 227, 72, 141, 167, 5, 60, 159, 52, 241, 118, 224, 152, 63, 232, 78, 36, 174, 139, 20, 195, 130, 57, 238, 218, 86, 249], [149, 115, 52, 45, 185, 123, 253, 221, 215, 29, 53, 143, 141, 128, 168, 214, 128, 182, 42, 6, 51, 248, 124, 253, 113, 222, 136, 53, 249, 192, 195, 21, 55, 50, 48, 60, 122, 184, 215, 201, 20, 177, 225, 235, 19, 204, 221, 13, 110, 92, 12, 168, 50, 149, 211, 14, 233, 129, 183, 176, 180, 127, 141, 228, 24, 166, 234, 134, 82, 107, 164, 205, 178, 88, 255, 45, 170, 180, 116, 162, 156, 51, 46, 207, 160, 254, 95, 195, 103, 135, 248, 179, 172, 224, 185, 81, 86, 165, 8, 57, 97, 158, 151, 91, 203, 38, 101, 47, 46, 207, 134, 74, 174, 181, 203, 68, 197, 53, 150, 42, 165, 115, 226, 20, 125], [79, 140, 13, 253, 114, 112, 125, 115, 225, 110, 74, 6, 151, 124, 10, 247, 224, 212, 98, 211, 95, 204, 198, 133, 186, 134, 220, 189, 186, 120, 163, 182, 39, 68, 164, 126, 65, 49, 243, 160, 53, 116, 178, 114, 238, 137, 27, 235, 224, 254, 223, 33, 87, 11, 229, 29, 177, 244, 75, 32, 181, 33, 141, 129, 14, 251, 220, 68, 202, 110, 231, 158, 155, 169, 119, 208, 73, 161, 3, 27, 183, 61, 36, 32, 211, 82, 99, 127, 91, 92, 15, 253, 61, 169, 45, 48, 206, 198, 208, 195, 242, 70, 175, 93, 49, 159, 181, 90, 220, 129, 255, 46, 94, 133, 205, 102, 116, 179, 41, 173, 231, 48, 131, 10, 31], [30, 191, 48, 86, 0, 6, 2, 167, 196, 156, 14, 191, 35, 88, 96, 255, 93, 111, 176, 49, 79, 191, 90, 225, 90, 76, 227, 15, 19, 61, 159, 149, 55, 178, 92, 85, 51, 254, 98, 79, 172, 232, 199, 229, 59, 33, 173, 126, 187, 72, 122, 251, 96, 206, 21, 183, 30, 245, 50, 46, 164, 201, 102, 144, 164, 69, 229, 101, 149, 218, 206, 222, 193, 42, 251, 12, 251, 53, 164, 247, 199, 156, 254, 147, 28, 21, 96, 45, 157, 88, 160, 24, 14, 24, 155, 197, 96, 180, 26, 222, 91, 189, 22, 109, 50, 234, 95, 113, 163, 37, 104, 253, 105, 7, 23, 195, 105, 59, 148, 2, 123, 169, 90, 199, 116], [190, 205, 22, 79, 72, 126, 132, 216, 158, 104, 139, 209, 5, 212, 211, 193, 142, 97, 249, 129, 5, 202, 21, 229, 65, 114, 36, 58, 59, 81, 250, 34, 93, 167, 85, 131, 203, 145, 146, 145, 133, 55, 61, 202, 103, 44, 254, 102, 65, 18, 240, 245, 55, 57, 117, 19, 198, 94, 42, 34, 123, 223, 189, 224, 73, 226, 21, 96, 107, 162, 22, 7, 78, 174, 128, 89, 179, 236, 102, 28, 200, 194, 78, 149, 32, 115, 94, 99, 171, 224, 12, 225, 35, 125, 147, 82, 73, 162, 29, 57, 33, 209, 8, 86, 164, 189, 19, 73, 53, 119, 3, 195, 1, 29, 198, 61, 114, 18, 37, 10, 243, 197, 144, 198, 230], [121, 251, 128, 176, 232, 245, 78, 232, 184, 114, 73, 146, 89, 198, 131, 82, 188, 10, 221, 153, 73, 21, 235, 210, 116, 205, 64, 180, 106, 207, 215, 213, 235, 231, 227, 198, 237, 186, 172, 166, 204, 68, 105, 125, 111, 97, 99, 186, 237, 209, 191, 157, 109, 201, 72, 240, 55, 231, 153, 211, 26, 102, 111, 172, 80, 196, 221, 92, 226, 12, 105, 197, 88, 139, 79, 205, 101, 77, 210, 162, 239, 125, 66, 249, 161, 18, 49, 33, 43, 10, 4, 27, 169, 46, 160, 182, 103, 77, 109, 157, 33, 185, 161, 228, 243, 173, 89, 148, 155, 51, 81, 77, 83, 212, 60, 209, 81, 240, 143, 127, 58, 75, 227, 49, 20], [69, 195, 242, 194, 244, 87, 10, 185, 225, 93, 229, 10, 251, 176, 173, 43, 189, 35, 90, 69, 153, 201, 76, 56, 100, 164, 149, 42, 181, 253, 8, 213, 86, 186, 129, 98, 143, 12, 250, 163, 85, 26, 122, 156, 134, 229, 221, 172, 20, 139, 234, 41, 170, 16, 66, 5, 9, 154, 194, 102, 240, 194, 198, 18, 138, 192, 171, 187, 217, 208, 175, 67, 177, 133, 98, 250, 144, 136, 42, 230, 43, 163, 58, 11, 65, 54, 124, 38, 90, 191, 33, 78, 121, 44, 38, 4, 6, 174, 36, 79, 235, 169, 54, 62, 28, 71, 102, 41, 95, 46, 46, 1, 221, 119, 107, 25, 40, 198, 164, 98, 243, 101, 253, 95, 240], [147, 31, 226, 94, 3, 40, 90, 101, 134, 73, 96, 63, 38, 96, 95, 164, 116, 83, 202, 151, 211, 146, 111, 218, 128, 176, 123, 3, 128, 144, 82, 33, 31, 32, 252, 176, 30, 220, 40, 228, 6, 45, 163, 185, 33, 134, 163, 230, 183, 245, 189, 255, 153, 250, 160, 97, 116, 87, 21, 180, 209, 238, 236, 166, 206, 237, 237, 231, 78, 72, 197, 214, 12, 71, 162, 195, 76, 204, 187, 7, 222, 88, 77, 94, 111, 48, 8, 200, 241, 76, 138, 172, 101, 11, 254, 200, 81, 155, 142, 116, 97, 249, 255, 221, 222, 81, 249, 30, 180, 54, 34, 165, 244, 148, 72, 120, 253, 110, 213, 251, 6, 157, 81, 173, 159], [219, 62, 66, 144, 174, 191, 65, 189, 242, 32, 9, 228, 189, 213, 126, 107, 167, 119, 160, 243, 143, 174, 169, 99, 65, 164, 117, 121, 127, 250, 240, 9, 160, 48, 196, 75, 164, 41, 251, 236, 136, 34, 230, 199, 98, 141, 73, 186, 30, 242, 126, 114, 1, 167, 182, 247, 74, 139, 163, 248, 160, 102, 96, 61, 151, 31, 99, 144, 127, 192, 216, 5, 152, 133, 104, 73, 151, 12, 14, 215, 40, 188, 238, 75, 228, 195, 80, 227, 160, 55, 140, 233, 141, 101, 232, 145, 83, 65, 165, 8, 63, 26, 167, 244, 188, 72, 161, 192, 13, 222, 165, 202, 91, 167, 17, 144, 165, 20, 28, 67, 254, 32, 34, 71, 77], [52, 83, 120, 47, 184, 182, 173, 41, 211, 175, 35, 252, 205, 31, 213, 202, 79, 45, 106, 229, 81, 59, 133, 116, 122, 28, 12, 26, 115, 245, 21, 21, 112, 119, 78, 70, 163, 165, 198, 202, 9, 148, 252, 12, 212, 34, 20, 102, 18, 106, 117, 251, 3, 178, 41, 188, 84, 203, 108, 77, 3, 144, 136, 191, 198, 81, 103, 131, 171, 100, 167, 133, 201, 61, 146, 231, 14, 228, 207, 104, 94, 57, 21, 198, 54, 105, 102, 152, 109, 155, 184, 237, 27, 117, 129, 111, 12, 158, 6, 110, 92, 170, 105, 255, 198, 167, 234, 200, 84, 251, 245, 146, 127, 39, 54, 0, 15, 25, 5, 140, 0, 155, 227, 195, 81], [49, 27, 188, 110, 97, 216, 190, 38, 143, 213, 11, 152, 17, 61, 154, 72, 134, 233, 104, 61, 15, 243, 89, 7, 57, 44, 120, 233, 139, 138, 11, 245, 32, 78, 110, 33, 203, 193, 15, 19, 254, 221, 238, 211, 89, 6, 22, 32, 143, 144, 245, 103, 136, 12, 139, 96, 120, 229, 0, 22, 222, 250, 118, 24, 146, 186, 45, 188, 233, 241, 83, 191, 190, 74, 164, 177, 208, 89, 205, 190, 239, 177, 149, 75, 253, 208, 184, 221, 44, 129, 70, 170, 183, 238, 230, 84, 21, 175, 74, 174, 81, 71, 105, 202, 41, 214, 57, 21, 53, 2, 130, 84, 116, 171, 250, 59, 166, 191, 202, 201, 112, 179, 208, 54, 115], [232, 79, 96, 0, 55, 253, 73, 36, 156, 123, 207, 155, 107, 49, 97, 12, 8, 15, 151, 61, 106, 95, 36, 34, 129, 231, 60, 216, 183, 206, 5, 153, 175, 198, 191, 106, 155, 219, 244, 21, 251, 16, 255, 163, 179, 15, 130, 242, 196, 50, 216, 179, 251, 13, 194, 19, 249, 44, 243, 129, 47, 42, 125, 48, 232, 194, 172, 123, 240, 17, 165, 158, 231, 110, 210, 48, 5, 65, 14, 227, 35, 92, 237, 140, 198, 24, 129, 60, 251, 89, 231, 150, 83, 20, 148, 169, 218, 56, 79, 39, 101, 246, 248, 127, 2, 198, 90, 192, 22, 154, 93, 114, 174, 252, 117, 227, 59, 51, 84, 71, 67, 12, 224, 254, 187], [220, 10, 188, 54, 214, 242, 17, 142, 223, 216, 34, 33, 44, 134, 183, 243, 205, 124, 70, 61, 12, 82, 44, 95, 100, 228, 191, 134, 244, 34, 94, 211, 59, 20, 118, 103, 75, 153, 68, 200, 5, 190, 30, 6, 57, 136, 4, 155, 70, 163, 124, 245, 109, 96, 243, 244, 245, 109, 50, 88, 198, 36, 74, 65, 74, 34, 244, 37, 84, 126, 211, 185, 115, 134, 208, 30, 221, 21, 164, 202, 14, 98, 191, 200, 230, 115, 65, 245, 208, 80, 123, 147, 254, 38, 221, 15, 213, 33, 43, 74, 20, 189, 142, 201, 143, 237, 174, 155, 167, 157, 240, 249, 197, 70, 240, 172, 46, 250, 175, 32, 128, 137, 138, 147, 116], [160, 165, 122, 97, 178, 156, 98, 171, 210, 142, 135, 217, 96, 71, 151, 97, 185, 164, 104, 236, 88, 60, 149, 126, 105, 172, 93, 254, 191, 125, 200, 247, 138, 235, 174, 74, 130, 36, 129, 63, 192, 201, 1, 34, 96, 130, 253, 232, 141, 215, 101, 136, 26, 218, 250, 55, 243, 223, 198, 160, 61, 71, 92, 62, 185, 27, 21, 35, 142, 55, 137, 65, 49, 216, 104, 20, 30, 5, 57, 172, 141, 145, 220, 123, 118, 112, 136, 181, 121, 77, 11, 162, 112, 87, 196, 104, 8, 82, 46, 138, 248, 63, 48, 126, 208, 113, 123, 235, 84, 88, 112, 143, 54, 1, 122, 157, 222, 197, 228, 109, 118, 51, 41, 209, 227], [226, 76, 196, 194, 11, 139, 105, 251, 223, 175, 164, 10, 255, 198, 226, 105, 190, 73, 39, 193, 86, 206, 106, 111, 160, 180, 207, 140, 127, 148, 118, 194, 240, 12, 124, 33, 231, 11, 199, 176, 184, 195, 10, 251, 223, 228, 217, 45, 223, 130, 178, 117, 137, 187, 133, 245, 80, 86, 112, 100, 18, 195, 186, 24, 117, 46, 81, 47, 25, 128, 40, 130, 231, 76, 150, 72, 223, 142, 95, 117, 209, 159, 85, 34, 118, 47, 26, 90, 147, 240, 216, 85, 120, 8, 100, 39, 34, 51, 137, 91, 63, 236, 188, 91, 78, 95, 125, 4, 166, 87, 139, 10, 29, 201, 69, 85, 24, 240, 79, 67, 123, 188, 142, 236, 125], [232, 89, 56, 127, 82, 21, 34, 193, 69, 0, 147, 235, 250, 202, 206, 238, 181, 207, 128, 208, 85, 255, 64, 18, 105, 37, 188, 152, 59, 211, 195, 192, 153, 191, 12, 161, 249, 101, 8, 110, 222, 75, 230, 71, 154, 202, 125, 72, 8, 116, 224, 129, 249, 204, 238, 238, 190, 104, 237, 66, 212, 26, 125, 74, 51, 151, 191, 27, 179, 238, 197, 221, 39, 150, 181, 244, 20, 245, 34, 180, 169, 99, 158, 84, 5, 51, 74, 138, 30, 12, 111, 190, 12, 229, 206, 171, 235, 177, 167, 145, 188, 26, 63, 224, 249, 221, 18, 34, 78, 193, 169, 225, 136, 73, 72, 100, 47, 196, 141, 201, 112, 21, 22, 155, 6], [68, 99, 214, 99, 213, 77, 218, 130, 107, 0, 33, 83, 19, 135, 247, 33, 112, 239, 84, 252, 58, 40, 235, 175, 190, 240, 132, 169, 167, 79, 142, 125, 115, 11, 222, 247, 139, 168, 153, 255, 207, 26, 153, 131, 54, 75, 114, 112, 127, 237, 78, 50, 185, 211, 204, 214, 169, 153, 41, 124, 83, 246, 33, 160, 29, 223, 207, 221, 78, 212, 242, 15, 170, 189, 60, 157, 120, 249, 251, 202, 109, 207, 220, 120, 146, 124, 84, 172, 81, 167, 192, 42, 51, 42, 42, 4, 76, 219, 252, 47, 77, 26, 1, 241, 90, 16, 68, 149, 187, 182, 44, 20, 84, 158, 169, 51, 19, 42, 20, 0, 98, 87, 200, 251, 55], [136, 149, 36, 145, 70, 33, 236, 133, 80, 49, 254, 114, 145, 16, 201, 173, 83, 242, 231, 183, 156, 150, 205, 214, 120, 158, 167, 107, 123, 236, 76, 79, 18, 40, 30, 60, 75, 55, 229, 64, 76, 37, 144, 170, 163, 122, 246, 222, 209, 62, 154, 107, 242, 17, 186, 80, 200, 98, 176, 33, 25, 16, 129, 199, 95, 254, 237, 203, 165, 230, 68, 167, 216, 161, 94, 3, 84, 128, 212, 47, 249, 171, 75, 21, 71, 122, 253, 142, 103, 92, 213, 19, 4, 184, 175, 190, 172, 1, 53, 247, 103, 108, 75, 170, 140, 200, 100, 222, 20, 232, 148, 233, 22, 145, 170, 9, 208, 32, 242, 213, 237, 118, 161, 114, 230], [135, 153, 19, 117, 130, 202, 135, 2, 117, 20, 113, 230, 122, 203, 1, 220, 24, 38, 140, 213, 8, 156, 26, 254, 109, 147, 59, 120, 199, 168, 90, 102, 7, 219, 40, 168, 125, 245, 10, 50, 66, 132, 86, 149, 131, 212, 82, 218, 104, 83, 185, 49, 147, 158, 35, 39, 79, 62, 1, 122, 33, 138, 91, 58, 231, 172, 62, 238, 62, 246, 142, 42, 182, 47, 180, 90, 198, 96, 128, 9, 44, 32, 83, 74, 175, 82, 99, 245, 179, 15, 174, 199, 221, 53, 206, 108, 85, 97, 247, 34, 116, 253, 234, 198, 164, 188, 101, 21, 18, 231, 96, 1, 181, 8, 190, 173, 212, 3, 161, 237, 43, 68, 49, 59, 69], [242, 253, 174, 61, 16, 162, 125, 159, 217, 150, 19, 54, 28, 153, 70, 132, 194, 78, 143, 174, 210, 38, 186, 38, 255, 157, 153, 208, 11, 13, 145, 167, 94, 47, 70, 51, 185, 58, 48, 135, 170, 162, 63, 93, 108, 40, 118, 25, 141, 159, 40, 152, 152, 51, 206, 20, 159, 215, 47, 170, 137, 26, 70, 35, 48, 2, 54, 244, 21, 240, 184, 207, 54, 135, 81, 126, 41, 171, 86, 94, 53, 8, 240, 111, 64, 86, 122, 208, 2, 139, 96, 252, 121, 30, 220, 108, 198, 98, 149, 176, 69, 207, 210, 147, 137, 127, 63, 215, 130, 254, 0, 58, 207, 97, 129, 65, 94, 61, 127, 67, 20, 118, 127, 23, 36], [202, 68, 111, 141, 57, 1, 107, 56, 7, 211, 54, 174, 105, 228, 73, 75, 63, 188, 166, 210, 193, 140, 227, 103, 74, 105, 199, 180, 96, 124, 250, 250, 140, 223, 25, 129, 1, 221, 237, 81, 31, 30, 234, 148, 104, 211, 56, 147, 72, 145, 143, 90, 218, 7, 242, 33, 232, 178, 155, 114, 230, 102, 141, 244, 199, 138, 82, 245, 112, 224, 68, 8, 120, 248, 196, 112, 74, 56, 137, 189, 130, 50, 139, 158, 206, 10, 32, 54, 123, 144, 129, 125, 93, 254, 1, 76, 10, 167, 214, 174, 0, 246, 99, 95, 55, 156, 217, 128, 139, 102, 205, 182, 49, 194, 241, 100, 125, 166, 23, 172, 182, 241, 123, 170, 252], [116, 220, 8, 39, 52, 70, 118, 210, 22, 104, 239, 211, 37, 52, 225, 69, 113, 109, 111, 189, 49, 18, 131, 5, 209, 61, 143, 230, 107, 47, 174, 121, 60, 47, 128, 123, 22, 243, 141, 85, 3, 250, 110, 210, 169, 51, 45, 117, 142, 0, 218, 178, 182, 231, 84, 13, 49, 10, 140, 98, 88, 80, 119, 23, 91, 100, 107, 101, 67, 151, 235, 31, 230, 115, 68, 16, 60, 104, 187, 153, 221, 78, 32, 81, 242, 193, 3, 87, 191, 17, 89, 215, 55, 43, 80, 108, 37, 78, 212, 55, 222, 117, 85, 136, 168, 231, 80, 110, 229, 217, 88, 227, 142, 161, 133, 109, 10, 100, 207, 151, 192, 238, 46, 59, 64], [27, 117, 57, 245, 202, 69, 27, 92, 118, 64, 123, 25, 37, 123, 42, 173, 47, 132, 133, 170, 69, 91, 22, 218, 251, 105, 71, 112, 45, 75, 226, 36, 216, 41, 164, 235, 84, 141, 172, 15, 16, 5, 13, 12, 15, 42, 165, 84, 41, 42, 97, 246, 50, 224, 190, 29, 13, 76, 180, 160, 194, 58, 148, 149, 133, 81, 43, 75, 244, 147, 251, 39, 77, 89, 147, 21, 160, 194, 240, 20, 222, 239, 13, 22, 25, 1, 133, 125, 193, 176, 174, 45, 185, 140, 76, 207, 193, 62, 120, 211, 76, 137, 116, 164, 189, 25, 187, 158, 87, 192, 21, 20, 240, 27, 208, 106, 123, 210, 235, 181, 8, 94, 64, 33, 31], [137, 24, 62, 200, 129, 63, 2, 133, 132, 90, 242, 255, 127, 99, 193, 96, 32, 204, 137, 124, 79, 33, 72, 204, 151, 87, 157, 208, 152, 81, 10, 124, 214, 66, 188, 220, 109, 53, 158, 128, 42, 236, 20, 199, 149, 199, 80, 181, 191, 148, 21, 95, 206, 117, 188, 174, 95, 150, 98, 11, 43, 240, 193, 157, 210, 143, 148, 11, 115, 55, 188, 123, 91, 141, 169, 68, 238, 31, 174, 19, 148, 29, 149, 122, 104, 110, 106, 181, 99, 131, 161, 62, 202, 113, 72, 52, 46, 48, 232, 238, 63, 24, 101, 123, 46, 101, 252, 110, 68, 207, 165, 115, 20, 208, 17, 39, 42, 254, 167, 199, 48, 236, 208, 4, 5], [94, 106, 13, 15, 54, 171, 212, 57, 65, 6, 125, 193, 170, 241, 254, 135, 145, 61, 212, 1, 109, 200, 188, 177, 68, 29, 39, 159, 36, 63, 146, 55, 149, 115, 118, 203, 244, 175, 13, 71, 208, 99, 87, 80, 110, 75, 37, 122, 231, 140, 171, 172, 214, 39, 47, 130, 18, 150, 66, 208, 21, 187, 10, 172, 121, 252, 202, 219, 222, 23, 49, 59, 65, 218, 9, 21, 98, 28, 104, 184, 199, 203, 45, 13, 197, 78, 233, 37, 164, 108, 51, 89, 111, 130, 174, 182, 26, 220, 93, 223, 55, 248, 248, 217, 73, 107, 135, 148, 20, 59, 123, 155, 2, 229, 99, 175, 152, 121, 244, 69, 208, 23, 108, 119, 191], [63, 27, 52, 189, 231, 9, 24, 188, 33, 148, 146, 93, 8, 231, 130, 84, 206, 215, 192, 151, 233, 45, 151, 74, 187, 196, 127, 75, 169, 52, 150, 10, 158, 99, 89, 97, 55, 94, 114, 150, 72, 220, 206, 28, 208, 11, 242, 79, 203, 60, 234, 213, 15, 226, 89, 110, 158, 116, 112, 166, 185, 124, 70, 8, 145, 1, 176, 208, 60, 72, 222, 174, 15, 75, 207, 183, 75, 222, 136, 47, 195, 193, 176, 208, 37, 110, 7, 246, 218, 50, 74, 97, 160, 172, 61, 128, 98, 136, 204, 76, 123, 159, 139, 20, 15, 84, 244, 114, 0, 3, 222, 200, 199, 32, 28, 59, 198, 103, 38, 41, 98, 171, 13, 24, 33]]

g=block_splitting(125,111,monster_input)
for _ in range(3):
	print(next(g))

def Cn(n: int) -> int:
	"""

	:param n:
	:return:
	"""
	C=[[0 for _ in range(n)] for _ in range(n)]
	for i in range(n):
		for j in range(n):
			if i == 0:
				C[i][j]=math.sqrt(1 / n)
			else:
				C[i][j] = math.sqrt(2 / n) * math.cos(math.pi / n * (j + 1 / 2) * i)
	return C

def Cn_T(n: int) -> list:
	"""

	:param n:
	:return:
	"""
	C = [[0 for _ in range(n)] for _ in range(n)]
	for i in range(n):
		for j in range(n):
			if i == 0:
				C[j][i] = math.sqrt(1 / n)
			else:
				C[j][i] = math.sqrt(2 / n) * math.cos(math.pi / n * (j + 1 / 2) * i)
	return C


def DCT(v: list) -> list:
	"""

	:param v:
	:return:
	"""
	n=len(v)
	v_1=sum([1/math.sqrt(n)*v[j] for j in range(n)])
	v_out=[round(v_1,2)]
	for i in range(1,n):
		temp_v=sum([math.sqrt(2/n) * v[j] * math.cos(math.pi/n * (j + 1/2) * i) for j in range(n)])
		v_out.append(round(temp_v,2))
	return v_out

def IDCT(v: list) -> list :
	"""

	:param v:
	:return:
	"""
	n=len(v)
	C=Cn(n)
	result = []
	for i in range(len(C[0])):  # this loops through columns of the matrix
		total = 0
		for j in range(len(v)):  # this loops through vector coordinates & rows of matrix
			total += v[j] * C[j][i]
		result.append(total)
	return result


def matProd (A , B ):
	# we assume that A and B are non - empty matrices
	m = len ( A )
	n = len ( A [0])
	if len ( B ) != n :
		return None # the size does not match
	p = len ( B [0])
	C = [ None ] * m
	for i in range ( m ):
		C [ i ] = [0] * p
		for k in range ( p ):
			for j in range ( n ):
				C[i][k] += A[i][j] * B[j][k]
	return C

def DCT2(m: int, n: int, A: list):
	"""

	:param m: height (no of rows)
	:param n: width (no of columns)
	:param A: input matrix
	:return:
	"""
	CnT=Cn_T(n)
	Cm=Cn(m)
	first_mult=matProd(A,CnT)
	return matProd(Cm,first_mult)

def IDCT2(m: int, n: int, A: list):
	"""

	:param m: height (no of rows)
	:param n: width (no of columns)
	:param A: input matrix
	:return:
	"""
	C = Cn(n)
	Cm = Cn_T(m)
	first_mult = matProd(A, C)
	return matProd(Cm, first_mult)

def redalpha(i: int) -> tuple:
	"""

	:param i:
	:return:
	s, an integer in the set {−1,1},
	k an integer in the range {0..8},
	αi=s⋅αk
	"""
	if abs(i)<=8:
		return 1,abs(i)
	else:
		int_div=i//16
		remainder=i%16
		if int_div%2==0:
			k=1
		else:
			k=-1
		if remainder>=9:
			remainder-=16
			k*=-1
	return (k,abs(remainder))
print(redalpha(-8))
def ncoeff8(i, j):
	"""

	:param i: integer in the range {0..8},
	:param j: integer in the range {0..8},
	:return:
	s, an integer in the set {−1,1},
	k an integer in the range {0..7},
	Cij=s⋅αk
	"""
	if i == 0:
		return redalpha(4)
	else:
		return redalpha(i*(2*j+1))

def Transpose(A):
	"""

	:param A: matrix (in form of list of lists)
	:return: Transpose of matrix A
	"""
	return [[A[j][i] for j in range(len(A))] for i in range(len(A[0]))]

#pre-compute C_alpha matrix
C_alpha=[
    [1/2*ncoeff8(i, j)[0]*math.cos(ncoeff8(i,j)[1]*math.pi/16) for j in range(8)]
    for i in range(8)
]
C_coeff=[]
v_before=[[0 for _ in range(8)] for _ in range(8)]
v_final = [[0 for _ in range(8)] for _ in range(8)]

def DCT_Chen(A):
	"""

	:param A:
	:return:
	58
	"""

	for r in range(8):
		v0=C_alpha[4][0] * sum([A[r][j] for j in range(8)])
		v_before[r][0]=v0
		for i in range(1,8):
			if i%2==0:
				if i==4:
					v_add=(A[r][0]+ A[r][7])+(A[r][3]+ A[r][4])-(A[r][1]+ A[r][6])-(A[r][2]+ A[r][5])
					v_temp=C_alpha[4][0]*v_add
				elif i==2:
					v_add1 = (A[r][0] + A[r][7]) - (A[r][3] + A[r][4])
					v_add2 = (A[r][1] + A[r][6]) - (A[r][2] + A[r][5])
					v_temp = C_alpha[2][0] * v_add1 + C_alpha[6][0] * v_add2
				elif i==6:
					v_add1 = (A[r][0] + A[r][7]) - (A[r][3] + A[r][4])
					v_add2 = (A[r][1] + A[r][6]) - (A[r][2] + A[r][5])
					v_temp=C_alpha[6][0]*v_add1-C_alpha[2][0]*v_add2
				else:
					v_temp=sum([(A[r][j]+ A[r][7-j]) * C_alpha[i][j] for j in range(4)])
			else:
				v_temp = sum([(A[r][j] - A[r][7 - j]) * C_alpha[i][j] for j in range(4)])
			v_before[r][i]=v_temp
	v_mid=Transpose(v_before)
	for r in range(8):
		v0 = math.cos(math.pi / 4) / 2 * sum([v_mid[r][j] for j in range(8)])
		v_final[0][r] = v0
		for i in range(1, 8):
			if i % 2 == 0:
				if i == 4:
					v_add = (v_mid[r][0] + v_mid[r][7]) + (v_mid[r][3] + v_mid[r][4]) - (v_mid[r][1] + v_mid[r][6]) - (v_mid[r][2] + v_mid[r][5])
					v_temp = C_alpha[4][0] * v_add
				elif i == 2:
					v_add1 = (v_mid[r][0] + v_mid[r][7]) - (v_mid[r][3] + v_mid[r][4])
					v_add2 = (v_mid[r][1] + v_mid[r][6]) - (v_mid[r][2] + v_mid[r][5])
					v_temp = C_alpha[2][0] * v_add1 + C_alpha[6][0] * v_add2
				elif i == 6:
					v_add1 = (v_mid[r][0] + v_mid[r][7]) - (v_mid[r][3] + v_mid[r][4])
					v_add2 = (v_mid[r][1] + v_mid[r][6]) - (v_mid[r][2] + v_mid[r][5])
					v_temp = C_alpha[6][0] * v_add1 - C_alpha[2][0] * v_add2
				else:
					v_temp = sum([(v_mid[r][j] + v_mid[r][7 - j]) * C_alpha[i][j] for j in range(4)])
			else:
				v_temp = sum([(v_mid[r][j] - v_mid[r][7 - j]) * C_alpha[i][j] for j in range(4)])
			v_final[i][r] = v_temp
	return v_final

##Output comparison for DCT
naive=[[1210.0, -17.99692735337386, 14.779256233067407, -8.979557300103124, 23.250000000000014, -9.232556779784952, -13.969111825644514, -18.937081397077478],
	   [20.53822758002366, -34.0929440302768, 26.330398745736908, -9.038521236678951, -10.93299899504348, 10.730687995887013, 13.772435090993131, 6.9547727586290815],
	   [-10.38402933509522, -23.514074296063256, -1.853553390593277, 6.0404645982005585, -18.07450986222912, 3.1969718830684295, -20.41726188957802, -0.8264830874559816],
	   [-8.104806529195912, -5.04145665135767, 14.332151475584137, -14.613395187278638, -8.217831534021615, -2.732392543690959, -3.084509970003599, 8.429155764630426],
	   [-3.249999999999943, 9.501426153921102, 7.88463853042961, 1.317025177983379, -10.999999999999991, 17.904478829585752, 18.381919792134475, 15.24116083384256],
	   [3.8556330205585283, -2.2146896705631494, -18.166970222878785, 8.499840503342673, 8.268830646150814, -3.608430219669282, 0.8689979628581561, -6.862524463223144],
	   [8.901372633918172, 0.6330199687857647, -2.91726188957802, 3.6413659899039135, -1.1724304841575934, -7.421804998309854, -1.146446609406703, -1.9245633104352884],
	   [0.04912235980940949, -7.812994194337432, -2.4245087494156357, 1.5903798159784732, 1.1992571025829004, 4.247012669253736, -6.417410588884525, 0.31476943722475337]]

chen=[[1210.0000000000002, -17.996927353373888, 14.77925623306755, -8.97955730010327, 23.250000000000004, -9.232556779784863, -13.969111825643534, -18.937081397078945],
	  [20.538227580023698, -34.09294403027681, 26.330398745736915, -9.038521236678974, -10.932998995043473, 10.730687995887013, 13.772435090993197, 6.954772758628977],
	  [-10.384029335095121, -23.51407429606327, -1.8535533905932715, 6.040464598200588, -18.07450986222913, 3.196971883068438, -20.417261889578036, -0.8264830874559868],
	  [-8.104806529196079, -5.041456651357671, 14.332151475584148, -14.613395187278673, -8.217831534021599, -2.732392543690965, -3.0845099700035745, 8.429155764630408],
	  [-3.2499999999999862, 9.501426153921093, 7.884638530429614, 1.317025177983375, -11.000000000000002, 17.90447882958578, 18.381919792134465, 15.241160833842573],
	  [3.855633020558628, -2.2146896705631507, -18.16697022287876, 8.499840503342668, 8.268830646150828, -3.608430219669304, 0.8689979628581361, -6.862524463223146],
	  [8.901372633919138, 0.6330199687857636, -2.9172618895780342, 3.6413659899039232, -1.172430484157588, -7.421804998309837, -1.146446609406727, -1.9245633104353126],
	  [0.0491223598079511, -7.81299419433739, -2.424508749415626, 1.5903798159784621, 1.199257102582877, 4.247012669253758, -6.417410588884475, 0.31476943722478534]]
############################################################################
C_alpha_prov=[
    [4,4,4,4,4,4,4,4],
	[2,6,-6,-2,2,6,-6,-2],
	[4,-4,-4,4,4,-4,-4,4],
	[6,-2,2,-6,6,-2,2,-6],
	[1,3,5,7,-1,-3,-5,-7],
	[3,-7,-1,-5,-3,7,1,5],
	[5,-1,7,3,-5,1,-7,-3],
	[7,-5,3,-1,-7,5,-3,1]
]

[[0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738, 0.3535533905932738],
 [0.46193976625564337, 0.19134171618254492, -0.19134171618254492, -0.46193976625564337, 0.46193976625564337, 0.19134171618254492, -0.19134171618254492, -0.46193976625564337],
 [0.3535533905932738, -0.3535533905932738, -0.3535533905932738, 0.3535533905932738, 0.3535533905932738, -0.3535533905932738, -0.3535533905932738, 0.3535533905932738],
 [0.19134171618254492, -0.46193976625564337, 0.46193976625564337, -0.19134171618254492, 0.19134171618254492, -0.46193976625564337, 0.46193976625564337, -0.19134171618254492],
 [0.4903926402016152, 0.4157348061512726, 0.27778511650980114, 0.09754516100806417, -0.4903926402016152, -0.4157348061512726, -0.27778511650980114, -0.09754516100806417],
 [0.4157348061512726, -0.09754516100806417, -0.4903926402016152, -0.27778511650980114, -0.4157348061512726, 0.09754516100806417, 0.4903926402016152, 0.27778511650980114],
 [0.27778511650980114, -0.4903926402016152, 0.09754516100806417, 0.4157348061512726, -0.27778511650980114, 0.4903926402016152, -0.09754516100806417, -0.4157348061512726],
 [0.09754516100806417, -0.27778511650980114, 0.4157348061512726, -0.4903926402016152, -0.09754516100806417, 0.27778511650980114, -0.4157348061512726, 0.4903926402016152]]

##pre-compute C_alpha2 matrix
C_alpha2=[
    [1/2*ncoeff8(i, j)[0]*math.cos(ncoeff8(i,j)[1]*math.pi/16) for j in range(8)]
    for i in range(8)
]
C_coeff=[[ncoeff8(i,j)[0]*ncoeff8(i,j)[1] for j in range(8)] for i in range(8)]
v_before2=[0 for _ in range(8)]
v_final2 = [[0 for _ in range(8)] for _ in range(8)]
print(C_alpha2)
'''
def IDCT_Chen(A):
	"""

	:param A:
	:return: Matrix which reverses the process of Discrete Cosine Transform
	"""

	def I_1DCT_Chen(v_hat):
		"""
		1D implementation of Chen algorithm
		for multiplicative optimisation of IDCT_Chen
		:param A:
		:return:
		"""
		cache={(0,4): v_hat[0]*C_alpha2[0][0],
			   (2,2): v_hat[2]*C_alpha2[1][0],
			   (2,6): v_hat[2]*C_alpha2[1][1],
			   (4,4): v_hat[4]*C_alpha2[2][0],
			   (6,2): v_hat[6]*C_alpha2[1][0],
			   (6,6): v_hat[6]*C_alpha2[3][0],
			   (1,1): v_hat[1]*C_alpha2[4][0],
			   (1,3): v_hat[1]*C_alpha2[5][0],
			   (1,5): v_hat[1]*C_alpha2[6][0],
			   (1,7): v_hat[1]*C_alpha2[7][0],
			   (3,1): v_hat[3]*C_alpha2[4][0],
			   (3,3): v_hat[3]*C_alpha2[5][0],
			   (3,5): v_hat[3]*C_alpha2[6][0],
			   (3,7): v_hat[3]*C_alpha2[7][0],
			   (5,1): v_hat[5]*C_alpha2[4][0],
			   (5,3): v_hat[5]*C_alpha2[5][0],
			   (5,5): v_hat[5]*C_alpha2[6][0],
			   (5,7): v_hat[5]*C_alpha2[7][0],
			   (7,1): v_hat[7]*C_alpha2[4][0],
			   (7,3): v_hat[7]*C_alpha2[5][0],
			   (7,5): v_hat[7]*C_alpha2[6][0],
			   (7,7): v_hat[7]*C_alpha2[7][0]}

		"""
		22 multiplications have been cached, 
		will access them to compute components of v_out list
		"""

		v_out=[0 for _ in range(8)]
		v_out[0]=cache[(0,4)]+cache[(2,2)]+cache[(4,4)]+cache[(6,6)]+cache[(1,1)]+cache[(3,3)]+cache[(5,5)]+cache[(7,7)]
		v_out[1]=cache[(0,4)]+cache[(2,6)]-cache[(4,4)]-cache[(6,2)]+cache[(1,3)]-cache[(3,7)]-cache[(5,1)]-cache[(7,5)]
		v_out[2]=cache[(0,4)]-cache[(2,6)]-cache[(4,4)]+cache[(6,2)]+cache[(1,5)]-cache[(3,1)]+cache[(5,7)]+cache[(7,3)]
		v_out[3]=cache[(0,4)]-cache[(2,2)]+cache[(4,4)]-cache[(6,6)]+cache[(1,7)]-cache[(3,5)]+cache[(5,3)]-cache[(7,1)]
		v_out[7]=cache[(0,4)]+cache[(2,2)]+cache[(4,4)]+cache[(6,6)]-cache[(1,1)]-cache[(3,3)]-cache[(5,5)]-cache[(7,7)]
		v_out[6]=cache[(0,4)]+cache[(2,6)]-cache[(4,4)]-cache[(6,2)]-cache[(1,3)]+cache[(3,7)]+cache[(5,1)]+cache[(7,5)]
		v_out[5]=cache[(0,4)]-cache[(2,6)]-cache[(4,4)]+cache[(6,2)]-cache[(1,5)]+cache[(3,1)]-cache[(5,7)]-cache[(7,3)]
		v_out[4]=cache[(0,4)]-cache[(2,2)]+cache[(4,4)]-cache[(6,6)]-cache[(1,7)]+cache[(3,5)]-cache[(5,3)]+cache[(7,1)]

		return v_out
	for i in range(8):
		v_before2[i]=I_1DCT_Chen(A[i])
	v_mid=Transpose(v_before2)
	for i in range(8):
		v_final2[i]=I_1DCT_Chen(v_mid[i])
	return v_final2
'''
C_alpha=[
    [1/2*ncoeff8(i, j)[0]*math.cos(ncoeff8(i,j)[1]*math.pi/16) for j in range(8)]
    for i in range(8)
]
C_coeff=[[ncoeff8(i,j)[0]*ncoeff8(i,j)[1] for j in range(8)] for i in range(8)]
v_before2=[0 for _ in range(8)]
v_final2 = [[0 for _ in range(8)] for _ in range(8)]

print(C_coeff)
'''
print(cache2)
count+=1
'''
def IDCT_Chen2(A):
	"""

	  :param A:
	  :return:
	"""
	cache2 ={}
	def IDCT_Chen_1D(vhat):
		v_out=[0 for _ in range(8)]
		for c in range(8):
			v_temp = 0
			for j in range(8):
				if (j, abs(C_coeff[j][c])) in cache2:
					if C_coeff[j][c]>0:
						v_temp += cache2[(j, abs(C_coeff[j][c]))]
					else:
						v_temp -= cache2[(j, abs(C_coeff[j][c]))]
				else:
					cache2[(j, abs(C_coeff[j][c]))] = vhat[j] * C_alpha[j][c]
					v_temp += cache2[(j, abs(C_coeff[j][c]))]
			v_out[c]=v_temp
		cache2.clear()
		return v_out
	for r in range(8):
		v_before2[r]=IDCT_Chen_1D(A[r])
	v_mid2 = Transpose(v_before2)
	for r in range(8):
		v_final2[r]=IDCT_Chen_1D(v_mid2[r])
	return v_final2
#cache[(r,c,C_alpha2[r][c])]=A[r][c]*C_alpha2[r][c]

idctinput=[[1210.0000000000002, -17.996927353373888, 14.77925623306755, -8.97955730010327, 23.250000000000004, -9.232556779784863, -13.969111825643534, -18.937081397078945],
		   [20.538227580023698, -34.09294403027681, 26.330398745736915, -9.038521236678974, -10.932998995043473, 10.730687995887013, 13.772435090993197, 6.954772758628977],
		   [-10.384029335095121, -23.51407429606327, -1.8535533905932715, 6.040464598200588, -18.07450986222913, 3.196971883068438, -20.417261889578036, -0.8264830874559868],
		   [-8.104806529196079, -5.041456651357671, 14.332151475584148, -14.613395187278673, -8.217831534021599, -2.732392543690965, -3.0845099700035745, 8.429155764630408],
		   [-3.2499999999999862, 9.501426153921093, 7.884638530429614, 1.317025177983375, -11.000000000000002, 17.90447882958578, 18.381919792134465, 15.241160833842573],
		   [3.855633020558628, -2.2146896705631507, -18.16697022287876, 8.499840503342668, 8.268830646150828, -3.608430219669304, 0.8689979628581361, -6.862524463223146],
		   [8.901372633919138, 0.6330199687857636, -2.9172618895780342, 3.6413659899039232, -1.172430484157588, -7.421804998309837, -1.146446609406727, -1.9245633104353126],
		   [0.0491223598079511, -7.81299419433739, -2.424508749415626, 1.5903798159784621, 1.199257102582877, 4.247012669253758, -6.417410588884475, 0.31476943722478534]]

print('IDCT CHEN IMPLMENTATION')
#print(IDCT_Chen(idctinput))
print(IDCT_Chen2(idctinput))
def quantization(A, Q):
	"""

	:param A:
	:param Q:
	:return:
	"""
	quant=[[0 for _ in range(8)] for _ in range(8)]

	for i in range(8):
		for j in range(8):
			quant[i][j] = round(A[i][j]/Q[i][j])
	return quant

def quantizationI(A,Q):
	"""

	:param A:
	:param Q:
	:return:
	"""
	quant = [[0 for _ in range(8)] for _ in range(8)]

	for i in range(8):
		for j in range(8):
			quant[i][j] = round(A[i][j] * Q[i][j])
	return quant


#Luminance and chrominance matrices for Qmatrix function
LQM = [
  [16, 11, 10, 16,  24,  40,  51,  61],
  [12, 12, 14, 19,  26,  58,  60,  55],
  [14, 13, 16, 24,  40,  57,  69,  56],
  [14, 17, 22, 29,  51,  87,  80,  62],
  [18, 22, 37, 56,  68, 109, 103,  77],
  [24, 35, 55, 64,  81, 104, 113,  92],
  [49, 64, 78, 87, 103, 121, 120, 101],
  [72, 92, 95, 98, 112, 100, 103,  99],
]

CQM = [
  [17, 18, 24, 47, 99, 99, 99, 99],
  [18, 21, 26, 66, 99, 99, 99, 99],
  [24, 26, 56, 99, 99, 99, 99, 99],
  [47, 66, 99, 99, 99, 99, 99, 99],
  [99, 99, 99, 99, 99, 99, 99, 99],
  [99, 99, 99, 99, 99, 99, 99, 99],
  [99, 99, 99, 99, 99, 99, 99, 99],
  [99, 99, 99, 99, 99, 99, 99, 99],
]

#################################################################################



def Qmatrix(isY, phi):
	"""

	:param isY:
	:param phi:
	:return:
	"""
	if isY:
		quant=LQM
	else:
		quant=CQM
	if phi>=50:
		for i in range(8):
			for j in range(8):
				quant[i][j]=math.ceil((50+(200-2*phi)*quant[i][j])/100)
	else:
		for i in range(8):
			for j in range(8):
				quant[i][j]=math.ceil((50+round(500/phi)*quant[i][j])/100)
	return quant

#################################################################################

def zigzag(A):
	"""

	:param A:
	:return:
	"""
	m=len(A)
	n=len(A[0])

	for i in range(n+m-1):
		if i%2 == 1:
		#going down and left
			if i<n:
				x=0
				y=i
			else:
				x=i-n+1
				y=n-1
			while x<m and y>=0:
				yield A[x][y]
				x+=1
				y-=1
		else:
		# going up and right
			if i < m:
				x = i
				y = 0
			else:
				x = m - 1
				y = i - m + 1
			while x >= 0 and y < n:
				yield A[x][y]
				x -= 1
				y += 1


matzigzag=[
  [0, 0,  0,  1],
  [0, 0,  7,  8],
  [0,10, 0, 12]
]
g1=zigzag(matzigzag)


def rle0(g):
	"""

	:param g: generator that yields integers
	:return:
	"""
	zero_count=0
	for i in g:
		if i==0:
			zero_count+=1
		else:
			yield zero_count, i
			zero_count=0




M8 = [
    [ncoeff8(i, j) for j in range(8)]
    for i in range(8)
]


def M8_to_str(M8):
	def for1(s, i):
		return f"{'+' if s >= 0 else '-'}{i:d}"


	return "\n".join(
		" ".join(for1(s, i) for (s, i) in row)
		for row in M8
	)

print(M8_to_str(M8))

dctmat=[
  [140,  144,  147,  140,  140,  155,  179,  175],
  [144,  152,  140,  147,  140,  148,  167,  179],
  [ 152,  155,  136,  167,  163,  162,  152,  172],
  [168,  145,  156,  160,  152,  155,  136,  160],
  [162,  148,  156,  148,  140,  136,  147,  162],
  [ 147,  167,  140,  155,  155,  140,  136,  162],
  [ 136,  156,  123,  167,  162,  144,  140,  147],
  [ 148,  155,  136,  155,  152,  147,  147,  136]
]



v=[8, 16, 24, 32, 40, 48, 56, 64]
v2=[101.82, -51.54, -0.0, -5.39, 0.0, -1.61, -0.0, -0.41]





C=[
	[ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10],
    [ 2,  3,  4,  5,  6,  7,  8,  9, 10,  1],
    [ 3,  4,  5,  6,  7,  8,  9, 10,  1,  2],
    [ 4,  5,  6,  7,  8,  9, 10,  1,  2,  3],
    [ 5,  6,  7,  8,  9, 10,  1,  2,  3,  4],
    [ 6,  7,  8,  9, 10,  1,  2,  3,  4,  5],
    [ 7,  8,  9, 10,  1,  2,  3,  4,  5,  6],
    [ 8,  9, 10,  1,  2,  3,  4,  5,  6,  7],
    [ 9, 10,  1,  2,  3,  4,  5,  6,  7,  8],
]

a=block_splitting(10,9,C)




mat=[[2, 2, 2, 3, 3, 3, 4, 4, 4, 5],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 6],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 7],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 1],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 2],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 3],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 6],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 7],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 8],
	 [2, 2, 2, 3, 3, 3, 4, 4, 4, 9]]











mat_sampled=[[2, 3, 4, 2],
			 [2, 3, 4, 2],
			 [1, 2, 2, 1]]




